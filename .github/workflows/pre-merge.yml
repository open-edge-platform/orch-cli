---
# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: Pre-Merge CI Pipeline

on:
  pull_request:
    branches:
      - main
      - release-*
  workflow_dispatch:

permissions:
  contents: read

jobs:
  pre-checks:
    runs-on: ${{ github.repository_owner == 'intel' && 'intel-ubuntu-latest' || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          persist-credentials: false
      - name: "Verify Branch Name"
        uses: open-edge-platform/orch-ci/verify-branch-name@070a95caeeed643fc9d1a34c11eac78179ce136d # v0.1.34
  pre-merge-pipeline:
    needs: pre-checks
    uses: open-edge-platform/orch-ci/.github/workflows/pre-merge.yml@070a95caeeed643fc9d1a34c11eac78179ce136d  # v0.1.34
    with:
      bootstrap_tools: "go,gotools,golang-lint,nodejs,buf,hadolint,opa"
      run_version_check: true
      run_dep_version_check: false
      run_build: true
      run_lint: true
      run_test: true
      run_validate_clean_folder: false
      run_docker_build: false
      run_artifact: false
      project_folder: ${{ matrix.project_folder }}
  final-check:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [pre-merge-pipeline]
    env:
      RESULT: ${{ needs.pre-merge-pipeline.result }}
    steps:
      - name: Final Status Check
        run: |
          pre_merge_pipeline_result="${RESULT}"
          
          echo "Pre-merge pipeline result: $pre_merge_pipeline_result"

          if [ "$pre_merge_pipeline_result" == "success" ] || [ "$pre_merge_pipeline_result" == "skipped" ]; then
            echo "Pre-merge check passed successfully."
          else
            echo "Pre-merge checks failed. PR can't get merged"
            exit 1
          fi
