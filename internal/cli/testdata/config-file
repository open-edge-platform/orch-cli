# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

##############################################################
#                      Configuration File                    #
##############################################################
#
# This configuration file provides inputs for:
# - Proxy values: If the Edge node is behind a firewall.
# - SSH key: For password-less SSH connection from a remote server 
#            to the edge node.
# - User credentials: Set the username and password for the edge node.
#
##############################################################

# -------------------- Proxy Configuration --------------------
# Example: http_proxy="http://proxy-org.com:port-number"

http_proxy=""
https_proxy=""
no_proxy=""
HTTP_PROXY=""
HTTPS_PROXY=""
NO_PROXY=""

# -------------------- SSH Configuration ---------------------
# Example: Use `cat ~/.ssh/id_rsa.pub` or `cat ~/.ssh/id_ed25519.pub` 
#          to get the public key, or use any public key available 
#          under the `.ssh` directory.
# Copy the full key string and set it under the `ssh_key` variable.

ssh_key=""

# ------------------ User Credentials ------------------------
# Choose Linux user as you wish to create. This is mandatory
# Pswword will be taken from cmd line as input for security purpose
# Example: user_name="user"

user_name=""

# ------------------ Host type ------------------------
# Choose the type of host to deploy: container or kubernetes.
# Example: host_type="container" or host_type="kubernetes"
# Default value is kubernetes.
host_type="kubernetes"


# ------------------ LVM partition size ------------------------
# Set the LVM partition size in GB. This will be used for creating
# the LVM partition that will be used for user data. By default,
# `lvm_size_ingb` will be set to ZERO. Update the size in GB if required.
# Example: lvm_size_ingb="20"

# Note: If the Edge Node has only a single hard disk, update the lvm_size_ingb value; otherwise, skip it.
lvm_size_ingb="0"

# -------------------- Huge Page Size Configuration --------------------
# Configure the huge page size for guest VMs (optional).
# Set this value based on the requirements of your guest VMs.
# Leave it empty if huge pages are not needed.
#
#  Default hugepage table size is 2048. 
# If the hugepage table size is 2048, then the total memory allocated for hugepages is simply the product of these two values. For example, with a 2MB hugepage size, 2048 hugepages would consume 4GB of memory (2048 * 2MB = 4GB)
# Example:
#   huge_page_config="12 * 1024"
# This sets up 24GB of huge pages, huge page size of 2MB (2048).
# Calculation: 12 * 1024 * 2048 bytes = 24GB

huge_page_config=""

# -------------------Custom cloud-init Config file---------------------
# This section is to customize the cloud-init config file as per User Wish

# === Enable or disable systemd services ===
# List services to enable or disable.
# Note : Make sure Services should be part of the Base Image to enable or disable.
# Example:
#   services:
#     enable: [docker, ssh]
#     disable: [apache2]
services:
    enable: []
    disable: []

# === Create custom configuration files ===
# To create a file, specify its path,permission and content.
# Note : you can create as many files(shell,text,yaml) as you wish,just expand the write_files: with prefix -path for next file 
# Note : Make sure scripts/files passing to cloud-init file well tested,if any issues in the script/file error messages 
#        will be present under /var/log/cloud-init-output.log file on EMT image.
# Example:
#   write_files:
#     - path: /etc/cloud/test.sh
#        permissions: '0644'
#       content: |
#         #!/bin/sh
#         echo "This is Example"
write_files: []

# === Custom run commands ===
# List commands or scripts to run at boot.
# Note : Make sure syntax is correct for the commands,if any issues in commands error messages will be present 
#        under /var/log/cloud-init-output.log file on EMT image. 
# Example:
#   runcmd:
#     - systemctl restart myservice
#     - bash /etc/cloud/test.sh
runcmd: 
