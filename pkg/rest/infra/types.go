// Package infra provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package infra

import (
	"time"

	"github.com/go-openapi/strfmt"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// Defines values for HostBmcKind.
const (
	BAREMETALCONTROLLERKINDIPMI        HostBmcKind = "BAREMETAL_CONTROLLER_KIND_IPMI"
	BAREMETALCONTROLLERKINDNONE        HostBmcKind = "BAREMETAL_CONTROLLER_KIND_NONE"
	BAREMETALCONTROLLERKINDPDU         HostBmcKind = "BAREMETAL_CONTROLLER_KIND_PDU"
	BAREMETALCONTROLLERKINDUNSPECIFIED HostBmcKind = "BAREMETAL_CONTROLLER_KIND_UNSPECIFIED"
	BAREMETALCONTROLLERKINDVPRO        HostBmcKind = "BAREMETAL_CONTROLLER_KIND_VPRO"
)

// Defines values for HostPowerState.
const (
	POWERSTATEERROR       HostPowerState = "POWER_STATE_ERROR"
	POWERSTATEOFF         HostPowerState = "POWER_STATE_OFF"
	POWERSTATEON          HostPowerState = "POWER_STATE_ON"
	POWERSTATEUNSPECIFIED HostPowerState = "POWER_STATE_UNSPECIFIED"
)

// Defines values for HostState.
const (
	HOSTSTATEDELETED     HostState = "HOST_STATE_DELETED"
	HOSTSTATEDELETING    HostState = "HOST_STATE_DELETING"
	HOSTSTATEERROR       HostState = "HOST_STATE_ERROR"
	HOSTSTATEONBOARDED   HostState = "HOST_STATE_ONBOARDED"
	HOSTSTATEREGISTERED  HostState = "HOST_STATE_REGISTERED"
	HOSTSTATEUNSPECIFIED HostState = "HOST_STATE_UNSPECIFIED"
	HOSTSTATEUNTRUSTED   HostState = "HOST_STATE_UNTRUSTED"
)

// Defines values for IPAddressConfigMethod.
const (
	IPADDRESSCONFIGMODEDYNAMIC     IPAddressConfigMethod = "IP_ADDRESS_CONFIG_MODE_DYNAMIC"
	IPADDRESSCONFIGMODESTATIC      IPAddressConfigMethod = "IP_ADDRESS_CONFIG_MODE_STATIC"
	IPADDRESSCONFIGMODEUNSPECIFIED IPAddressConfigMethod = "IP_ADDRESS_CONFIG_MODE_UNSPECIFIED"
)

// Defines values for IPAddressStatus.
const (
	IPADDRESSSTATUSASSIGNED           IPAddressStatus = "IP_ADDRESS_STATUS_ASSIGNED"
	IPADDRESSSTATUSASSIGNMENTERROR    IPAddressStatus = "IP_ADDRESS_STATUS_ASSIGNMENT_ERROR"
	IPADDRESSSTATUSCONFIGURATIONERROR IPAddressStatus = "IP_ADDRESS_STATUS_CONFIGURATION_ERROR"
	IPADDRESSSTATUSCONFIGURED         IPAddressStatus = "IP_ADDRESS_STATUS_CONFIGURED"
	IPADDRESSSTATUSERROR              IPAddressStatus = "IP_ADDRESS_STATUS_ERROR"
	IPADDRESSSTATUSRELEASED           IPAddressStatus = "IP_ADDRESS_STATUS_RELEASED"
	IPADDRESSSTATUSUNSPECIFIED        IPAddressStatus = "IP_ADDRESS_STATUS_UNSPECIFIED"
)

// Defines values for InstanceKind.
const (
	INSTANCEKINDMETAL       InstanceKind = "INSTANCE_KIND_METAL"
	INSTANCEKINDUNSPECIFIED InstanceKind = "INSTANCE_KIND_UNSPECIFIED"
)

// Defines values for InstanceState.
const (
	INSTANCESTATEDELETED     InstanceState = "INSTANCE_STATE_DELETED"
	INSTANCESTATEERROR       InstanceState = "INSTANCE_STATE_ERROR"
	INSTANCESTATERUNNING     InstanceState = "INSTANCE_STATE_RUNNING"
	INSTANCESTATEUNSPECIFIED InstanceState = "INSTANCE_STATE_UNSPECIFIED"
	INSTANCESTATEUNTRUSTED   InstanceState = "INSTANCE_STATE_UNTRUSTED"
)

// Defines values for LinkStateType.
const (
	LINKSTATEDOWN        LinkStateType = "LINK_STATE_DOWN"
	LINKSTATEUNSPECIFIED LinkStateType = "LINK_STATE_UNSPECIFIED"
	LINKSTATEUP          LinkStateType = "LINK_STATE_UP"
)

// Defines values for LocationType.
const (
	RESOURCEKINDREGION LocationType = "RESOURCE_KIND_REGION"
	RESOURCEKINDSITE   LocationType = "RESOURCE_KIND_SITE"
)

// Defines values for OperatingSystemProvider.
const (
	OPERATINGSYSTEMPROVIDERINFRA       OperatingSystemProvider = "OPERATING_SYSTEM_PROVIDER_INFRA"
	OPERATINGSYSTEMPROVIDERLENOVO      OperatingSystemProvider = "OPERATING_SYSTEM_PROVIDER_LENOVO"
	OPERATINGSYSTEMPROVIDERUNSPECIFIED OperatingSystemProvider = "OPERATING_SYSTEM_PROVIDER_UNSPECIFIED"
)

// Defines values for OperatingSystemType.
const (
	OPERATINGSYSTEMTYPEIMMUTABLE   OperatingSystemType = "OPERATING_SYSTEM_TYPE_IMMUTABLE"
	OPERATINGSYSTEMTYPEMUTABLE     OperatingSystemType = "OPERATING_SYSTEM_TYPE_MUTABLE"
	OPERATINGSYSTEMTYPEUNSPECIFIED OperatingSystemType = "OPERATING_SYSTEM_TYPE_UNSPECIFIED"
)

// Defines values for ProviderKind.
const (
	PROVIDERKINDBAREMETAL   ProviderKind = "PROVIDER_KIND_BAREMETAL"
	PROVIDERKINDUNSPECIFIED ProviderKind = "PROVIDER_KIND_UNSPECIFIED"
)

// Defines values for ProviderVendor.
const (
	PROVIDERVENDORLENOVOLOCA  ProviderVendor = "PROVIDER_VENDOR_LENOVO_LOCA"
	PROVIDERVENDORLENOVOLXCA  ProviderVendor = "PROVIDER_VENDOR_LENOVO_LXCA"
	PROVIDERVENDORUNSPECIFIED ProviderVendor = "PROVIDER_VENDOR_UNSPECIFIED"
)

// Defines values for ScheduleStatus.
const (
	SCHEDULESTATUSMAINTENANCE ScheduleStatus = "SCHEDULE_STATUS_MAINTENANCE"
	SCHEDULESTATUSOSUPDATE    ScheduleStatus = "SCHEDULE_STATUS_OS_UPDATE"
	SCHEDULESTATUSUNSPECIFIED ScheduleStatus = "SCHEDULE_STATUS_UNSPECIFIED"
)

// Defines values for SecurityFeature.
const (
	SECURITYFEATURENONE                            SecurityFeature = "SECURITY_FEATURE_NONE"
	SECURITYFEATURESECUREBOOTANDFULLDISKENCRYPTION SecurityFeature = "SECURITY_FEATURE_SECURE_BOOT_AND_FULL_DISK_ENCRYPTION"
	SECURITYFEATUREUNSPECIFIED                     SecurityFeature = "SECURITY_FEATURE_UNSPECIFIED"
)

// Defines values for StatusIndicator.
const (
	STATUSINDICATIONERROR       StatusIndicator = "STATUS_INDICATION_ERROR"
	STATUSINDICATIONIDLE        StatusIndicator = "STATUS_INDICATION_IDLE"
	STATUSINDICATIONINPROGRESS  StatusIndicator = "STATUS_INDICATION_IN_PROGRESS"
	STATUSINDICATIONUNSPECIFIED StatusIndicator = "STATUS_INDICATION_UNSPECIFIED"
)

// Defines values for TelemetryCollectorKind.
const (
	TELEMETRYCOLLECTORKINDCLUSTER     TelemetryCollectorKind = "TELEMETRY_COLLECTOR_KIND_CLUSTER"
	TELEMETRYCOLLECTORKINDHOST        TelemetryCollectorKind = "TELEMETRY_COLLECTOR_KIND_HOST"
	TELEMETRYCOLLECTORKINDUNSPECIFIED TelemetryCollectorKind = "TELEMETRY_COLLECTOR_KIND_UNSPECIFIED"
)

// Defines values for TelemetrySeverityLevel.
const (
	TELEMETRYSEVERITYLEVELCRITICAL    TelemetrySeverityLevel = "TELEMETRY_SEVERITY_LEVEL_CRITICAL"
	TELEMETRYSEVERITYLEVELDEBUG       TelemetrySeverityLevel = "TELEMETRY_SEVERITY_LEVEL_DEBUG"
	TELEMETRYSEVERITYLEVELERROR       TelemetrySeverityLevel = "TELEMETRY_SEVERITY_LEVEL_ERROR"
	TELEMETRYSEVERITYLEVELINFO        TelemetrySeverityLevel = "TELEMETRY_SEVERITY_LEVEL_INFO"
	TELEMETRYSEVERITYLEVELUNSPECIFIED TelemetrySeverityLevel = "TELEMETRY_SEVERITY_LEVEL_UNSPECIFIED"
	TELEMETRYSEVERITYLEVELWARN        TelemetrySeverityLevel = "TELEMETRY_SEVERITY_LEVEL_WARN"
)

// Defines values for WorkloadKind.
const (
	WORKLOADKINDCLUSTER     WorkloadKind = "WORKLOAD_KIND_CLUSTER"
	WORKLOADKINDUNSPECIFIED WorkloadKind = "WORKLOAD_KIND_UNSPECIFIED"
)

// Defines values for WorkloadMemberKind.
const (
	WORKLOADMEMBERKINDCLUSTERNODE WorkloadMemberKind = "WORKLOAD_MEMBER_KIND_CLUSTER_NODE"
	WORKLOADMEMBERKINDUNSPECIFIED WorkloadMemberKind = "WORKLOAD_MEMBER_KIND_UNSPECIFIED"
)

// Amount Defines an amount of resources related to memory and disk by default, specified in bytes.
type Amount = string

// Host A host resource.
type Host struct {
	// BiosReleaseDate The release date of the host BIOS.
	BiosReleaseDate *string `json:"biosReleaseDate,omitempty"`

	// BiosVendor The vendor of the host BIOS.
	BiosVendor *string `json:"biosVendor,omitempty"`

	// BiosVersion The version of the host BIOS.
	BiosVersion *string `json:"biosVersion,omitempty"`

	// BmcIp BMC IP address, such as "192.0.0.1".
	BmcIp *string `json:"bmcIp,omitempty"`

	// BmcKind The type of BMC.
	BmcKind *HostBmcKind `json:"bmcKind,omitempty"`

	// CpuArchitecture Architecture of the CPU model, e.g. x86_64.
	CpuArchitecture *string `json:"cpuArchitecture,omitempty"`

	// CpuCapabilities String list of all CPU capabilities (possibly JSON).
	CpuCapabilities *string `json:"cpuCapabilities,omitempty"`

	// CpuCores Number of CPU cores.
	CpuCores *uint32 `json:"cpuCores,omitempty"`

	// CpuModel CPU model of the host.
	CpuModel *string `json:"cpuModel,omitempty"`

	// CpuSockets Number of physical CPU sockets.
	CpuSockets *uint32 `json:"cpuSockets,omitempty"`

	// CpuThreads Total number of threads supported by the CPU.
	CpuThreads *uint32 `json:"cpuThreads,omitempty"`

	// CpuTopology A JSON field describing the CPU topology. The CPU topology may contain, among others, information about CPU core types, their layout, and mapping to CPU sockets.
	CpuTopology *string `json:"cpuTopology,omitempty"`

	// CurrentPowerState The representation of a host power state.
	CurrentPowerState *HostPowerState `json:"currentPowerState,omitempty"`

	// CurrentState State of the host.
	CurrentState *HostState `json:"currentState,omitempty"`

	// DesiredPowerState The representation of a host power state.
	DesiredPowerState *HostPowerState `json:"desiredPowerState,omitempty"`

	// DesiredState State of the host.
	DesiredState *HostState `json:"desiredState,omitempty"`

	// HostGpus The list of GPU capabilities.
	HostGpus *[]HostResourcesGPU `json:"hostGpus,omitempty"`

	// HostNics The list of interface capabilities.
	HostNics *[]HostResourcesInterface `json:"hostNics,omitempty"`

	// HostStatus The host's lifecycle status message.
	HostStatus *string `json:"hostStatus,omitempty"`

	// HostStatusIndicator The status indicator.
	HostStatusIndicator *StatusIndicator `json:"hostStatusIndicator,omitempty"`

	// HostStatusTimestamp A Unix, UTC timestamp when the host's lifecycle status was last updated.
	HostStatusTimestamp *uint64 `json:"hostStatusTimestamp,omitempty"`

	// HostStorages The list of storage capabilities.
	HostStorages *[]HostResourcesStorage `json:"hostStorages,omitempty"`

	// HostUsbs The list of USB capabilities.
	HostUsbs *[]HostResourcesUSB `json:"hostUsbs,omitempty"`

	// Hostname The host name.
	Hostname *string `json:"hostname,omitempty"`

	// InheritedMetadata The joint set of location's and host's logical metadata.
	InheritedMetadata *MetadataJoin `json:"inheritedMetadata,omitempty"`

	// Instance An instance resource.
	Instance *Instance `json:"instance,omitempty"`

	// MemoryBytes Quantity of the RAM in the system, in bytes.
	MemoryBytes *string `json:"memoryBytes,omitempty"`

	// Metadata A metadata list, represented by a list of key:value pairs.
	Metadata *Metadata `json:"metadata,omitempty"`

	// Name The host name.
	Name string `json:"name"`

	// Note The note associated with the host.
	Note *string `json:"note,omitempty"`

	// OnboardingStatus The host's onboarding status message.
	OnboardingStatus *string `json:"onboardingStatus,omitempty"`

	// OnboardingStatusIndicator The status indicator.
	OnboardingStatusIndicator *StatusIndicator `json:"onboardingStatusIndicator,omitempty"`

	// OnboardingStatusTimestamp A Unix, UTC timestamp when the host's onboarding status was last updated.
	OnboardingStatusTimestamp *uint64 `json:"onboardingStatusTimestamp,omitempty"`

	// ProductName The host's product name.
	ProductName *string `json:"productName,omitempty"`

	// Provider A provider resource.
	Provider *Provider `json:"provider,omitempty"`

	// RegistrationStatus The host's registration status message.
	RegistrationStatus *string `json:"registrationStatus,omitempty"`

	// RegistrationStatusIndicator The status indicator.
	RegistrationStatusIndicator *StatusIndicator `json:"registrationStatusIndicator,omitempty"`

	// RegistrationStatusTimestamp A Unix, UTC timestamp when the host's registration status was last updated.
	RegistrationStatusTimestamp *uint64 `json:"registrationStatusTimestamp,omitempty"`

	// ResourceId Resource ID, generated on Create.
	ResourceId *string `json:"resourceId,omitempty"`

	// SerialNumber SMBIOS device serial number.
	SerialNumber *string `json:"serialNumber,omitempty"`

	// Site A site resource.
	Site *Site `json:"site,omitempty"`

	// SiteId The site where the host is located.
	SiteId *string `json:"siteId,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// Uuid The host UUID identifier; UUID is unique and immutable.
	Uuid *openapi_types.UUID `json:"uuid,omitempty"`
}

// HostBmcKind The type of BMC.
type HostBmcKind string

// HostOperationWithNote A freeform field associated with the host invalidate or delete operations to store the reason for change.
type HostOperationWithNote struct {
	Note string `json:"note"`
}

// HostPowerState The representation of a host power state.
type HostPowerState string

// HostRegisterInfo Host registration information.
type HostRegisterInfo struct {
	// AutoOnboard Set to enforce auto-onboarding of the host, which means that no confirmation will be required when the host connects for the first time, to Edge Orchestrator.
	AutoOnboard *bool `json:"autoOnboard,omitempty"`

	// Name The host name.
	Name *string `json:"name,omitempty"`

	// SerialNumber The host's SMBIOS serial number.
	SerialNumber *string `json:"serialNumber,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// Uuid The host's UUID identifier.
	Uuid *openapi_types.UUID `json:"uuid,omitempty"`
}

// HostResourcesGPU The set of available host GPU cards.
type HostResourcesGPU struct {
	// Capabilities The specific GPU device capabilities [e.g., PCI Express*, MSI*, power management (PM)].
	Capabilities *[]string `json:"capabilities,omitempty"`

	// Description The human-readable GPU device description.
	Description *string `json:"description,omitempty"`

	// DeviceName The GPU device name.
	DeviceName *string `json:"deviceName,omitempty"`

	// PciId The GPU device's PCI identifier.
	PciId *string `json:"pciId,omitempty"`

	// Product The GPU device model.
	Product *string `json:"product,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// Vendor The GPU device vendor.
	Vendor *string `json:"vendor,omitempty"`
}

// HostResourcesInterface The set of available host interfaces.
type HostResourcesInterface struct {
	// BmcInterface Defines if the card is the Baseboard Management Controller (BMC) interface.
	BmcInterface *bool `json:"bmcInterface,omitempty"`

	// DeviceName The interface name.
	DeviceName *string `json:"deviceName,omitempty"`

	// Ipaddresses The interface's IP address list.
	Ipaddresses *[]IPAddress `json:"ipaddresses,omitempty"`

	// LinkState A generic structure to define the state of a link.
	LinkState *LinkState `json:"linkState,omitempty"`

	// MacAddr The interface's MAC address.
	MacAddr *string `json:"macAddr,omitempty"`

	// Mtu Defines an amount of resources related to memory and disk by default, specified in bytes.
	Mtu *Amount `json:"mtu,omitempty"`

	// PciIdentifier The interface's PCI identifier.
	PciIdentifier *string `json:"pciIdentifier,omitempty"`

	// SriovEnabled Flag that represents if the interface has SR-IOV support.
	SriovEnabled *bool `json:"sriovEnabled,omitempty"`

	// SriovVfsNum The number of virtual functions (VFs) currently provisioned on the interface, if SR-IOV is supported.
	SriovVfsNum *int `json:"sriovVfsNum,omitempty"`

	// SriovVfsTotal The maximum number of VFs the interface supports, if SR-IOV is supported.
	SriovVfsTotal *int `json:"sriovVfsTotal,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`
}

// HostResourcesStorage The set of available host storage capabilities.
type HostResourcesStorage struct {
	// CapacityBytes Defines an amount of resources related to memory and disk by default, specified in bytes.
	CapacityBytes *Amount `json:"capacityBytes,omitempty"`

	// DeviceName The storage device name.
	DeviceName *string `json:"deviceName,omitempty"`

	// Model The storage model.
	Model *string `json:"model,omitempty"`

	// Serial The storage device's unique serial number.
	Serial *string `json:"serial,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// Vendor The storage vendor.
	Vendor *string `json:"vendor,omitempty"`

	// Wwid The storage device's unique identifier.
	Wwid *string `json:"wwid,omitempty"`
}

// HostResourcesUSB The set of host USB resources.
type HostResourcesUSB struct {
	// Addr USB device number assigned by the OS.
	Addr *string `json:"addr,omitempty"`

	// Bus Bus number that the device connects to.
	Bus *string `json:"bus,omitempty"`

	// Class Class defined by USB Implementers Forum, Inc (USB-IF).
	Class *string `json:"class,omitempty"`

	// DeviceName The USB device name.
	DeviceName *string `json:"deviceName,omitempty"`

	// IdProduct Hexadecimal number representing the ID of the USB device product.
	IdProduct *string `json:"idProduct,omitempty"`

	// IdVendor Hexadecimal number representing the ID of the USB device vendor.
	IdVendor *string `json:"idVendor,omitempty"`

	// Serial Serial number of the USB device.
	Serial *string `json:"serial,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`
}

// HostState State of the host.
type HostState string

// HostsList A list of host objects.
type HostsList struct {
	// HasNext Indicates if there are more hosts available to be retrieved.
	HasNext *bool   `json:"hasNext,omitempty"`
	Hosts   *[]Host `json:"hosts,omitempty"`

	// TotalElements Total number of items the request would return, if not limited by pagination.
	TotalElements *int `json:"totalElements,omitempty"`
}

// HostsSummary A summary of host object status.
type HostsSummary struct {
	Error       *int `json:"error,omitempty"`
	Running     *int `json:"running,omitempty"`
	Total       *int `json:"total,omitempty"`
	Unallocated *int `json:"unallocated,omitempty"`
}

// IPAddress An IP address represented using the CIDR notation, and additional information identifying the configuration mode of the address.
type IPAddress struct {
	// Address CIDR representation of the IP address.
	Address *strfmt.CIDR `json:"address,omitempty"`

	// ConfigMethod Specifies how the IP address is configured.
	ConfigMethod *IPAddressConfigMethod `json:"configMethod,omitempty"`

	// Status The status of the IP address.
	Status *IPAddressStatus `json:"status,omitempty"`

	// StatusDetail The details of the status of the IP address.
	StatusDetail *string `json:"statusDetail,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`
}

// IPAddressConfigMethod Specifies how the IP address is configured.
type IPAddressConfigMethod string

// IPAddressStatus The status of the IP address.
type IPAddressStatus string

// Instance An instance resource.
type Instance struct {
	// CurrentOs An OS resource.
	CurrentOs *OperatingSystemResource `json:"currentOs,omitempty"`

	// CurrentState State of the instance.
	CurrentState *InstanceState `json:"currentState,omitempty"`

	// DesiredOs An OS resource.
	DesiredOs *OperatingSystemResource `json:"desiredOs,omitempty"`

	// DesiredState State of the instance.
	DesiredState *InstanceState `json:"desiredState,omitempty"`

	// Host A host resource.
	Host *Host `json:"host,omitempty"`

	// HostID The host's unique identifier associated with the instance.
	HostID *string `json:"hostID,omitempty"`

	// InstanceID The instance's unique identifier. Alias of resourceID.
	InstanceID *string `json:"instanceID,omitempty"`

	// InstanceStatus The instance's lifecycle status message.
	InstanceStatus *string `json:"instanceStatus,omitempty"`

	// InstanceStatusDetail The detailed status of the instance's software components.
	InstanceStatusDetail *string `json:"instanceStatusDetail,omitempty"`

	// InstanceStatusIndicator The status indicator.
	InstanceStatusIndicator *StatusIndicator `json:"instanceStatusIndicator,omitempty"`

	// InstanceStatusTimestamp A Unix, UTC timestamp when the instance's lifecycle status was last updated.
	InstanceStatusTimestamp *uint64 `json:"instanceStatusTimestamp,omitempty"`

	// Kind Type of the instance.
	Kind *InstanceKind `json:"kind,omitempty"`

	// LocalAccount A local account resource.
	LocalAccount *LocalAccount `json:"localAccount,omitempty"`

	// LocalAccountID The unique identifier of local account will be associated with the instance.
	LocalAccountID *string `json:"localAccountID,omitempty"`

	// Name The instance's human-readable name.
	Name *string `json:"name,omitempty"`

	// Os An OS resource.
	Os *OperatingSystemResource `json:"os,omitempty"`

	// OsID The unique identifier of OS resource that must be installed on the instance.
	// Deprecated:
	OsID *string `json:"osID,omitempty"`

	// ProvisioningStatus The instance's provisioning status message.
	ProvisioningStatus *string `json:"provisioningStatus,omitempty"`

	// ProvisioningStatusIndicator The status indicator.
	ProvisioningStatusIndicator *StatusIndicator `json:"provisioningStatusIndicator,omitempty"`

	// ProvisioningStatusTimestamp A Unix, UTC timestamp when the instance's provisioning status was last updated.
	ProvisioningStatusTimestamp *uint64 `json:"provisioningStatusTimestamp,omitempty"`

	// ResourceId Resource ID, generated by the inventory on Create.
	ResourceId *string `json:"resourceId,omitempty"`

	// SecurityFeature Security capabilities of a resource.
	SecurityFeature *SecurityFeature `json:"securityFeature,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// TrustedAttestationStatus The instance's software trusted attestation status message.
	TrustedAttestationStatus *string `json:"trustedAttestationStatus,omitempty"`

	// TrustedAttestationStatusIndicator The status indicator.
	TrustedAttestationStatusIndicator *StatusIndicator `json:"trustedAttestationStatusIndicator,omitempty"`

	// TrustedAttestationStatusTimestamp A Unix, UTC timestamp when the instance's software trusted attestation status was last updated.
	TrustedAttestationStatusTimestamp *uint64 `json:"trustedAttestationStatusTimestamp,omitempty"`

	// UpdateStatus The instance's software update status message.
	UpdateStatus *string `json:"updateStatus,omitempty"`

	// UpdateStatusDetail Beta: The detailed description of the instance's last software update.
	UpdateStatusDetail *string `json:"updateStatusDetail,omitempty"`

	// UpdateStatusIndicator The status indicator.
	UpdateStatusIndicator *StatusIndicator `json:"updateStatusIndicator,omitempty"`

	// UpdateStatusTimestamp A Unix, UTC timestamp when the instance's software update status was last updated.
	UpdateStatusTimestamp *uint64 `json:"updateStatusTimestamp,omitempty"`

	// WorkloadMembers The workload members associated with the instance.
	WorkloadMembers *[]WorkloadMember `json:"workloadMembers,omitempty"`
}

// InstanceKind Type of the instance.
type InstanceKind string

// InstanceList A list of instance objects.
type InstanceList struct {
	// HasNext Indicates if there are more instance objects available to be retrieved.
	HasNext   *bool       `json:"hasNext,omitempty"`
	Instances *[]Instance `json:"instances,omitempty"`

	// TotalElements Total number of items the request would return, if not limited by pagination.
	TotalElements *int `json:"totalElements,omitempty"`
}

// InstanceState State of the instance.
type InstanceState string

// LinkState A generic structure to define the state of a link.
type LinkState struct {
	// Timestamp The timestamp when the link state was last updated.
	Timestamp *time.Time `json:"timestamp,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// Type the type of the state.
	Type *LinkStateType `json:"type,omitempty"`
}

// LinkStateType the type of the state.
type LinkStateType string

// LocalAccount A local account resource.
type LocalAccount struct {
	// LocalAccountID The local account resource's unique identifier. Alias of resourceId.
	LocalAccountID *string `json:"localAccountID,omitempty"`

	// ResourceId resource ID, generated by the inventory on Create.
	ResourceId *string `json:"resourceId,omitempty"`

	// SshKey The local account's sshkey.
	SshKey string `json:"sshKey"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// Username The local account's username.
	Username string `json:"username"`
}

// LocalAccountList A list of local account objects.
type LocalAccountList struct {
	// HasNext Indicates if there are more objects available to be retrieved.
	HasNext *bool `json:"hasNext,omitempty"`

	// LocalAccounts Array of local account objects.
	LocalAccounts *[]LocalAccount `json:"localAccounts,omitempty"`

	// TotalElements Total number of items that the request would return, if not limited by pagination.
	TotalElements *int `json:"totalElements,omitempty"`
}

// LocationNode A location node's resource, region, or site.
type LocationNode struct {
	// Name The node's human-readable name.
	Name *string `json:"name,omitempty"`

	// ParentId The associated resource ID of the parent resource of this location node. For a region, it could be empty or a regionId. For a site, it could be empty or a regionId.
	ParentId *string `json:"parentId,omitempty"`

	// ResourceId The associated node's resource ID, generated by the inventory on Create.
	ResourceId *string `json:"resourceId,omitempty"`

	// Type The type of the location node.
	Type *LocationType `json:"type,omitempty"`
}

// LocationNodeList A LocationNodeList object. Contains all the required information to build a tree of regions and sites, given their associations.
type LocationNodeList struct {
	// Nodes The ordered list of nodes (root to leaf) of the location's hierarchy tree of regions and sites. The relationship of the root to leaf is limited by the maximum depth of seven items.
	Nodes *[]LocationNode `json:"nodes,omitempty"`

	// OutputElements The number of items returned in the nodes's array that match the query parameters of the request.
	OutputElements *int `json:"outputElements,omitempty"`

	// TotalElements The total number of items that match the query parameters of the request.
	TotalElements *int `json:"totalElements,omitempty"`
}

// LocationType The type of the location node.
type LocationType string

// Metadata A metadata list, represented by a list of key:value pairs.
type Metadata = []struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// MetadataJoin The joint set of location's and host's logical metadata.
type MetadataJoin struct {
	// Location A metadata list, represented by a list of key:value pairs.
	Location *Metadata `json:"location,omitempty"`

	// Ou A metadata list, represented by a list of key:value pairs.
	Ou *Metadata `json:"ou,omitempty"`
}

// OU An OU resource.
type OU struct {
	// InheritedMetadata A metadata list, represented by a list of key:value pairs.
	InheritedMetadata *Metadata `json:"inheritedMetadata,omitempty"`

	// Metadata A metadata list, represented by a list of key:value pairs.
	Metadata *Metadata `json:"metadata,omitempty"`

	// Name The OU's name.
	Name string `json:"name"`

	// OuID The OU resource's unique identifier. Alias of resourceId.
	OuID *string `json:"ouID,omitempty"`

	// OuKind The kind of OU resource, e.g. BU and client.
	OuKind *string `json:"ouKind,omitempty"`

	// ParentOu The parent OU's unique identifier that the OU is associated to, when it exists.
	ParentOu *string `json:"parentOu,omitempty"`

	// ResourceId resource ID, generated by the inventory on Create.
	ResourceId *string `json:"resourceId,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`
}

// OperatingSystemProvider Describes the OS owner that drives the OS provisioning.
type OperatingSystemProvider string

// OperatingSystemResource An OS resource.
type OperatingSystemResource struct {
	// Architecture The OS resource's architecture.
	Architecture *string `json:"architecture,omitempty"`

	// ImageId A unique identifier of the OS image that can be retrieved from the running OS.
	ImageId *string `json:"imageId,omitempty"`

	// ImageUrl The URL repository of the OS image. If set, overwrites repoUrl.
	ImageUrl *string `json:"imageUrl,omitempty"`

	// InstalledPackages Freeform text, OS-dependent. A list of package names, one per line (newline separated). Must not contain version information.
	InstalledPackages *string `json:"installedPackages,omitempty"`

	// KernelCommand The OS resource's kernel command.
	KernelCommand *string `json:"kernelCommand,omitempty"`

	// Name The OS resource's name.
	Name *string `json:"name,omitempty"`

	// OsProvider Describes the OS owner that drives the OS provisioning.
	OsProvider *OperatingSystemProvider `json:"osProvider,omitempty"`

	// OsResourceID The OS resource's unique identifier. Alias of resourceId.
	OsResourceID *string `json:"osResourceID,omitempty"`

	// OsType OsType describes the immutability of the OS. This field is immutable after creation.
	OsType *OperatingSystemType `json:"osType,omitempty"`

	// PlatformBundle Opaque JSON field storing references to custom installation script(s) that supplements the base OS with additional OS-level dependencies/configurations. If empty, the default OS installation will be used.
	PlatformBundle *string `json:"platformBundle,omitempty"`

	// ProfileName Name of the OS profile that the OS resource belongs to.
	ProfileName *string `json:"profileName,omitempty"`

	// ProfileVersion Version of OS profile that the OS resource belongs to.
	ProfileVersion *string `json:"profileVersion,omitempty"`

	// RepoUrl The URL repository of the OS update sources. Deprecated. Use imageUrl to filter repoUrl.
	// Deprecated:
	RepoUrl *string `json:"repoUrl,omitempty"`

	// ResourceId Resource ID, generated by inventory on Create
	ResourceId *string `json:"resourceId,omitempty"`

	// SecurityFeature Security capabilities of a resource.
	SecurityFeature *SecurityFeature `json:"securityFeature,omitempty"`

	// Sha256 SHA256 checksum of the OS resource in hexadecimal representation.
	Sha256 string `json:"sha256"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// UpdateSources The list of OS resource update sources.
	UpdateSources []string `json:"updateSources"`
}

// OperatingSystemResourceList A list of OS resource objects.
type OperatingSystemResourceList struct {
	OperatingSystemResources *[]OperatingSystemResource `json:"OperatingSystemResources,omitempty"`

	// HasNext Indicates if there are more OS objects available to be retrieved.
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of items the request would return, if not limited by pagination.
	TotalElements *int `json:"totalElements,omitempty"`
}

// OperatingSystemType OsType describes the immutability of the OS. This field is immutable after creation.
type OperatingSystemType string

// ProblemDetails Carries a message in an HTTP error response.
type ProblemDetails struct {
	// Message Contains detailed information about the problem, such as its source data that can be used for debugging purposes.
	Message *string `json:"message,omitempty"`
}

// Provider A provider resource.
type Provider struct {
	// ApiCredentials The provider resource's list of credentials.
	ApiCredentials *[]string `json:"apiCredentials,omitempty"`

	// ApiEndpoint The provider resource's API endpoint.
	ApiEndpoint string `json:"apiEndpoint"`

	// Config Opaque provider configuration.
	Config *string `json:"config,omitempty"`

	// Name The provider resource's name.
	Name string `json:"name"`

	// ProviderID The provider resource's unique identifier. Alias of resourceId.
	ProviderID *string `json:"providerID,omitempty"`

	// ProviderKind Kind of provider.
	ProviderKind ProviderKind `json:"providerKind"`

	// ProviderVendor Vendor of the provider.
	ProviderVendor *ProviderVendor `json:"providerVendor,omitempty"`

	// ResourceId resource ID, generated by the inventory on Create.
	ResourceId *string `json:"resourceId,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`
}

// ProviderKind Kind of provider.
type ProviderKind string

// ProviderList A list of provider objects.
type ProviderList struct {
	// HasNext Indicates if there are more objects available to be retrieved.
	HasNext   *bool       `json:"hasNext,omitempty"`
	Providers *[]Provider `json:"providers,omitempty"`

	// TotalElements Total number of items that the request would return, if not limited by pagination.
	TotalElements *int `json:"totalElements,omitempty"`
}

// ProviderVendor Vendor of the provider.
type ProviderVendor string

// Proxy The proxy information.
type Proxy struct {
	// FtpProxy The FTP proxy.
	FtpProxy *string `json:"ftpProxy,omitempty"`

	// HttpProxy The HTTP proxy.
	HttpProxy *string `json:"httpProxy,omitempty"`

	// HttpsProxy The HTTPS proxy.
	HttpsProxy *string `json:"httpsProxy,omitempty"`

	// NoProxy The no-proxy info.
	NoProxy *string `json:"noProxy,omitempty"`
}

// Region A region resource
type Region struct {
	// InheritedMetadata A metadata list, represented by a list of key:value pairs.
	InheritedMetadata *Metadata `json:"inheritedMetadata,omitempty"`

	// Metadata A metadata list, represented by a list of key:value pairs.
	Metadata *Metadata `json:"metadata,omitempty"`

	// Name The region's name.
	Name *string `json:"name,omitempty"`

	// ParentId The parent region's unique identifier that the region is associated to, if it exists. This field cannot be used in filter.
	ParentId *string `json:"parentId,omitempty"`

	// ParentRegion A region resource
	ParentRegion *Region `json:"parentRegion,omitempty"`

	// RegionID The region's unique identifier. Alias of resourceId.
	RegionID *string `json:"regionID,omitempty"`

	// ResourceId resource ID, generated by the inventory on Create
	ResourceId *string `json:"resourceId,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// TotalSites Total number of sites associated to this region, directly or by child regions.
	TotalSites *int `json:"totalSites,omitempty"`
}

// RegionsList A list of region objects.
type RegionsList struct {
	// HasNext Indicates if there are more location objects available to be retrieved.
	HasNext *bool     `json:"hasNext,omitempty"`
	Regions *[]Region `json:"regions,omitempty"`

	// TotalElements Total number of items that the request would return, if not limited by pagination.
	TotalElements *int `json:"totalElements,omitempty"`
}

// RepeatedSchedule A repeated-schedule resource.
type RepeatedSchedule struct {
	CronDayMonth string `json:"cronDayMonth"`
	CronDayWeek  string `json:"cronDayWeek"`
	CronHours    string `json:"cronHours"`
	CronMinutes  string `json:"cronMinutes"`
	CronMonth    string `json:"cronMonth"`

	// DurationSeconds The duration in seconds of the repeated schedule, per schedule.
	DurationSeconds int `json:"durationSeconds"`

	// Name The schedule's name.
	Name *string `json:"name,omitempty"`

	// RepeatedScheduleID The repeated schedule's unique identifier. Alias of resourceId.
	RepeatedScheduleID *string `json:"repeatedScheduleID,omitempty"`

	// ResourceId resource ID, generated by the inventory on Create.
	ResourceId *string `json:"resourceId,omitempty"`

	// ScheduleStatus The representation of a schedule's status.
	ScheduleStatus ScheduleStatus `json:"scheduleStatus"`

	// TargetHost A host resource.
	TargetHost *Host `json:"targetHost,omitempty"`

	// TargetHostId The target host ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
	TargetHostId *string `json:"targetHostId,omitempty"`

	// TargetRegion A region resource
	TargetRegion *Region `json:"targetRegion,omitempty"`

	// TargetRegionId The target region ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
	TargetRegionId *string `json:"targetRegionId,omitempty"`

	// TargetSite A site resource.
	TargetSite *Site `json:"targetSite,omitempty"`

	// TargetSiteId The target site ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
	TargetSiteId *string `json:"targetSiteId,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`
}

// RepeatedSchedulesList A list of repeated schedule objects.
type RepeatedSchedulesList struct {
	RepeatedSchedules *[]RepeatedSchedule `json:"RepeatedSchedules,omitempty"`

	// HasNext Indicates if there are more repeated schedule objects available to be retrieved.
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of items that the request would return, if not limited by pagination.
	TotalElements *int `json:"totalElements,omitempty"`
}

// ScheduleStatus The representation of a schedule's status.
type ScheduleStatus string

// SchedulesListJoin List of all schedule objects, repeated and single.
type SchedulesListJoin struct {
	// RepeatedSchedules Contains a flat list of repeated schedules, possibly including all inherited ones.
	RepeatedSchedules *[]RepeatedSchedule `json:"RepeatedSchedules,omitempty"`

	// SingleSchedules Contains a flat list of single schedules, possibly including all inherited ones.
	SingleSchedules *[]SingleSchedule `json:"SingleSchedules,omitempty"`

	// HasNext Indicates if there are more schedule objects available to be retrieved.
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of items that the request would return, if not limited by pagination.
	TotalElements *int `json:"totalElements,omitempty"`
}

// SecurityFeature Security capabilities of a resource.
type SecurityFeature string

// SingleSchedule A single schedule resource.
type SingleSchedule struct {
	// EndSeconds The end time in seconds, of the single schedule. The value of endSeconds must be equal to or bigger than the value of startSeconds.
	EndSeconds *int `json:"endSeconds,omitempty"`

	// Name The schedule's name.
	Name *string `json:"name,omitempty"`

	// ResourceId resource ID, generated by the inventory on Create.
	ResourceId *string `json:"resourceId,omitempty"`

	// ScheduleStatus The representation of a schedule's status.
	ScheduleStatus ScheduleStatus `json:"scheduleStatus"`

	// SingleScheduleID The single schedule resource's unique identifier. Alias of resourceId.
	SingleScheduleID *string `json:"singleScheduleID,omitempty"`

	// StartSeconds The start time in seconds, of the single schedule.
	StartSeconds int `json:"startSeconds"`

	// TargetHost A host resource.
	TargetHost *Host `json:"targetHost,omitempty"`

	// TargetHostId The target host ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
	TargetHostId *string `json:"targetHostId,omitempty"`

	// TargetRegion A region resource
	TargetRegion *Region `json:"targetRegion,omitempty"`

	// TargetRegionId The target region ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
	TargetRegionId *string `json:"targetRegionId,omitempty"`

	// TargetSite A site resource.
	TargetSite *Site `json:"targetSite,omitempty"`

	// TargetSiteId The target site ID of the schedule. Only one target can be provided per schedule. This field cannot be used as filter.
	TargetSiteId *string `json:"targetSiteId,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`
}

// SingleSchedulesList A list of single schedule objects.
type SingleSchedulesList struct {
	SingleSchedules *[]SingleSchedule `json:"SingleSchedules,omitempty"`

	// HasNext Indicates if there are more objects available to be retrieved.
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of items that the request would return, if not limited by pagination.
	TotalElements *int `json:"totalElements,omitempty"`
}

// Site A site resource.
type Site struct {
	// DnsServers The list of DNS servers that the site has available.
	DnsServers *[]string `json:"dnsServers,omitempty"`

	// DockerRegistries The set of Docker* registries that the site has available.
	DockerRegistries *[]string `json:"dockerRegistries,omitempty"`

	// InheritedMetadata The joint set of location's and host's logical metadata.
	InheritedMetadata *MetadataJoin `json:"inheritedMetadata,omitempty"`

	// Metadata A metadata list, represented by a list of key:value pairs.
	Metadata *Metadata `json:"metadata,omitempty"`

	// MetricsEndpoint The set of site-available metrics, specified in a single JSON object.
	MetricsEndpoint *string `json:"metricsEndpoint,omitempty"`

	// Name The site's human-readable name.
	Name *string `json:"name,omitempty"`

	// Ou An OU resource.
	Ou *OU `json:"ou,omitempty"`

	// OuId The OU unique identifier that the site is associated to, if it exists. This field cannot be used in filter.
	OuId *string `json:"ouId,omitempty"`

	// Provider A provider resource.
	Provider *Provider `json:"provider,omitempty"`

	// Proxy The proxy information.
	Proxy *Proxy `json:"proxy,omitempty"`

	// Region A region resource
	Region *Region `json:"region,omitempty"`

	// RegionId The region's unique identifier that the site is associated to. This field cannot be used in filter.
	RegionId *string `json:"regionId,omitempty"`

	// ResourceId resource ID, generated by the inventory on Create.
	ResourceId *string `json:"resourceId,omitempty"`

	// SiteID The site's unique identifier. Alias of resourceId.
	SiteID *string `json:"siteID,omitempty"`

	// SiteLat The geolocation latitude of the site. Points are represented as latitude-longitude pairs in the E7 representation (degrees are multiplied by 10**7 and rounded to the nearest integer). siteLat must be in the range of +/- 90 degrees.
	SiteLat *int `json:"siteLat,omitempty"`

	// SiteLng The geolocation longitude of the site. Points are represented as latitude-longitude pairs in the E7 representation (degrees are multiplied by 10**7 and rounded to the nearest integer). siteLng must be in the range of +/- 180 degrees (inclusive).
	SiteLng *int `json:"siteLng,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`
}

// SitesList A list of site objects.
type SitesList struct {
	// HasNext Indicates if there are more objects available to be retrieved.
	HasNext *bool   `json:"hasNext,omitempty"`
	Sites   *[]Site `json:"sites,omitempty"`

	// TotalElements Total number of items that the request would return, if not limited by pagination.
	TotalElements *int `json:"totalElements,omitempty"`
}

// StatusIndicator The status indicator.
type StatusIndicator string

// TelemetryCollectorKind Kind of telemetry collector.
type TelemetryCollectorKind string

// TelemetryLogsGroup Telemetry group that defines a set of log types to collect.
type TelemetryLogsGroup struct {
	// CollectorKind Kind of telemetry collector.
	CollectorKind TelemetryCollectorKind `json:"collectorKind"`

	// Groups A list of log groups to collect.
	Groups []string `json:"groups"`

	// Name Human-readable name for the log group
	Name string `json:"name"`

	// TelemetryLogsGroupId Unique ID of the telemetry group.
	TelemetryLogsGroupId *string `json:"telemetryLogsGroupId,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`
}

// TelemetryLogsGroupList A list of log group objects.
type TelemetryLogsGroupList struct {
	TelemetryLogsGroups *[]TelemetryLogsGroup `json:"TelemetryLogsGroups,omitempty"`

	// HasNext Indicates if there are more log group objects available to be retrieved.
	HasNext *bool `json:"hasNext,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// TotalElements Total number of items that the request would return, if not limited by pagination.
	TotalElements *int `json:"totalElements,omitempty"`
}

// TelemetryLogsProfile A telemetry log profile for a hierarchy object.
type TelemetryLogsProfile struct {
	// LogLevel Log level used for the telemetry config. This field must only be defined if kind equals to TELEMETRY_CONFIG_KIND_LOGS.
	LogLevel TelemetrySeverityLevel `json:"logLevel"`

	// LogsGroup Telemetry group that defines a set of log types to collect.
	LogsGroup *TelemetryLogsGroup `json:"logsGroup,omitempty"`

	// LogsGroupId The unique identifier of the telemetry log group.
	LogsGroupId string `json:"logsGroupId"`

	// ProfileId The ID of the telemetry profile.
	ProfileId *string `json:"profileId,omitempty"`

	// TargetInstance The ID of the instance that the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
	TargetInstance *string `json:"targetInstance,omitempty"`

	// TargetRegion The ID of the region where the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
	TargetRegion *string `json:"targetRegion,omitempty"`

	// TargetSite The ID of the site where the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
	TargetSite *string `json:"targetSite,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`
}

// TelemetryLogsProfileList A list of telemetry log profiles.
type TelemetryLogsProfileList struct {
	TelemetryLogsProfiles *[]TelemetryLogsProfile `json:"TelemetryLogsProfiles,omitempty"`

	// HasNext Indicates if there are more telemetry log profile objects available to be retrieved.
	HasNext *bool `json:"hasNext,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// TotalElements Total number of items that the request would return, if not limited by pagination.
	TotalElements *int `json:"totalElements,omitempty"`
}

// TelemetryMetricsGroup A definition of metric groups to monitor.
type TelemetryMetricsGroup struct {
	// CollectorKind Kind of telemetry collector.
	CollectorKind TelemetryCollectorKind `json:"collectorKind"`

	// Groups A list of metric groups to collect.
	Groups []string `json:"groups"`

	// Name Human-readable name for the metric group.
	Name string `json:"name"`

	// TelemetryMetricsGroupId Unique ID of the telemetry group.
	TelemetryMetricsGroupId *string `json:"telemetryMetricsGroupId,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`
}

// TelemetryMetricsGroupList A list of telemetry groups, which defines a set of metrics to collect.
type TelemetryMetricsGroupList struct {
	TelemetryMetricsGroups *[]TelemetryMetricsGroup `json:"TelemetryMetricsGroups,omitempty"`

	// HasNext Indicates if there are more telemetry metric group objects available to be retrieved.
	HasNext *bool `json:"hasNext,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// TotalElements Total number of items that the request would return, if not limited by pagination.
	TotalElements *int `json:"totalElements,omitempty"`
}

// TelemetryMetricsProfile A telemetry metric profile for a hierarchy object.
type TelemetryMetricsProfile struct {
	// MetricsGroup A definition of metric groups to monitor.
	MetricsGroup *TelemetryMetricsGroup `json:"metricsGroup,omitempty"`

	// MetricsGroupId The unique identifier of the telemetry metric group.
	MetricsGroupId string `json:"metricsGroupId"`

	// MetricsInterval Metric interval (in seconds) for the telemetry profile. This field must only be defined if the type equals to TELEMETRY_CONFIG_KIND_METRICS.
	MetricsInterval int `json:"metricsInterval"`

	// ProfileId The ID of the telemetry profile.
	ProfileId *string `json:"profileId,omitempty"`

	// TargetInstance The ID of the instance that the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
	TargetInstance *string `json:"targetInstance,omitempty"`

	// TargetRegion The ID of the region where the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
	TargetRegion *string `json:"targetRegion,omitempty"`

	// TargetSite The ID of the site where the telemetry profile is assigned to. Can only be one of targetInstance, targetSite, or targetRegion.
	TargetSite *string `json:"targetSite,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`
}

// TelemetryMetricsProfileList A list of telemetry metric profiles.
type TelemetryMetricsProfileList struct {
	TelemetryMetricsProfiles *[]TelemetryMetricsProfile `json:"TelemetryMetricsProfiles,omitempty"`

	// HasNext Indicates if there are more telemetry metric profile objects available to be retrieved.
	HasNext *bool `json:"hasNext,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// TotalElements Total number of items that the request would return, if not limited by pagination.
	TotalElements *int `json:"totalElements,omitempty"`
}

// TelemetrySeverityLevel Log level used for the telemetry config. This field must only be defined if kind equals to TELEMETRY_CONFIG_KIND_LOGS.
type TelemetrySeverityLevel string

// Timestamps A structure to hold Update and Create timestamps.
type Timestamps struct {
	// CreatedAt Timestamp for the creation of the resource.
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// UpdatedAt Timestamp for the last update of the resource.
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Workload A generic way to group compute resources to obtain a workload.
type Workload struct {
	// ExternalId The ID of the external resource, used to link to resources outside the realm of Edge Infrastructure Manager.
	ExternalId *string `json:"externalId,omitempty"`

	// Kind Type of workload.
	Kind    WorkloadKind      `json:"kind"`
	Members *[]WorkloadMember `json:"members,omitempty"`

	// Name Human-readable name for the workload.
	Name *string `json:"name,omitempty"`

	// ResourceId resource ID, generated by the inventory on Create
	ResourceId *string `json:"resourceId,omitempty"`

	// Status Human-readable status of the workload.
	Status *string `json:"status,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// WorkloadId The workload's unique identifier. Alias of resourceId.
	WorkloadId *string `json:"workloadId,omitempty"`
}

// WorkloadKind Type of workload.
type WorkloadKind string

// WorkloadList A list of workload objects.
type WorkloadList struct {
	Workloads *[]Workload `json:"Workloads,omitempty"`

	// HasNext Indicates if there are more workload objects available to be retrieved.
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of items the request would return, if not limited by pagination.
	TotalElements *int `json:"totalElements,omitempty"`
}

// WorkloadMember A member of a workload.
type WorkloadMember struct {
	// Instance An instance resource.
	Instance *Instance `json:"instance,omitempty"`

	// InstanceId The unique identifier of the instance.
	InstanceId *string `json:"instanceId,omitempty"`

	// Kind Type of workload member.
	Kind WorkloadMemberKind `json:"kind"`

	// Member An instance resource.
	Member *Instance `json:"member,omitempty"`

	// ResourceId resource ID, generated by the inventory on Create
	ResourceId *string `json:"resourceId,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps `json:"timestamps,omitempty"`

	// Workload A generic way to group compute resources to obtain a workload.
	Workload *Workload `json:"workload,omitempty"`

	// WorkloadId The unique identifier of the workload.
	WorkloadId *string `json:"workloadId,omitempty"`

	// WorkloadMemberId The workload member's unique identifier. Alias of resourceId.
	WorkloadMemberId *string `json:"workloadMemberId,omitempty"`
}

// WorkloadMemberKind Type of workload member.
type WorkloadMemberKind string

// WorkloadMemberList A list of workload member objects.
type WorkloadMemberList struct {
	WorkloadMembers *[]WorkloadMember `json:"WorkloadMembers,omitempty"`

	// HasNext Indicates if there are more workload members objects available to be retrieved.
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of items the request would return, if not limited by pagination.
	TotalElements *int `json:"totalElements,omitempty"`
}

// N400BadRequest Carries a message in an HTTP error response.
type N400BadRequest = ProblemDetails

// N401Unauthorized Carries a message in an HTTP error response.
type N401Unauthorized = ProblemDetails

// N403Forbidden Carries a message in an HTTP error response.
type N403Forbidden = ProblemDetails

// N404NotFound Carries a message in an HTTP error response.
type N404NotFound = ProblemDetails

// N406NotAcceptable Carries a message in an HTTP error response.
type N406NotAcceptable = ProblemDetails

// N408Timeout Carries a message in an HTTP error response.
type N408Timeout = ProblemDetails

// N409Conflict Carries a message in an HTTP error response.
type N409Conflict = ProblemDetails

// N412PreconditionFailed Carries a message in an HTTP error response.
type N412PreconditionFailed = ProblemDetails

// N422UnprocessableEntity Carries a message in an HTTP error response.
type N422UnprocessableEntity = ProblemDetails

// N429TooManyRequests Carries a message in an HTTP error response.
type N429TooManyRequests = ProblemDetails

// N500InternalServerError Carries a message in an HTTP error response.
type N500InternalServerError = ProblemDetails

// N501Unimplemented Carries a message in an HTTP error response.
type N501Unimplemented = ProblemDetails

// N503ServiceUnavailable Carries a message in an HTTP error response.
type N503ServiceUnavailable = ProblemDetails

// GetV1ProjectsProjectNameComputeParams defines parameters for GetV1ProjectsProjectNameCompute.
type GetV1ProjectsProjectNameComputeParams struct {
	// Offset Index of the first item to return. This allows skipping of items.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page, min of 1 and max of 100, default of 20.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Filter Optional filter to return only items of interest. See https://google.aip.dev/160 for details. Takes precedence over other filter parameters, if set.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// OrderBy Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// SiteID Returns only the compute elements that are assigned with the given site ID. If equals to 'null', then it returns all the hosts not associated with any site.
	SiteID *string `form:"siteID,omitempty" json:"siteID,omitempty"`

	// InstanceID Returns only the compute elements that are assigned to the given instanceID. If equals to 'null', then it returns all the hosts not associated with any instance.
	InstanceID *string `form:"instanceID,omitempty" json:"instanceID,omitempty"`

	// Uuid Returns the compute elements associated with the given UUID. UUID field cannot be null, if specified needs to be filled.
	Uuid *string `form:"uuid,omitempty" json:"uuid,omitempty"`

	// Metadata Filters the metadata associated with the compute element. Values are expected to be in the form of 'key=value'.
	Metadata *[]string `form:"metadata,omitempty" json:"metadata,omitempty"`

	// Detail Indicates if compute elements identified by the filter need to be returned with all their respective child resources, e.g., USBs, Interfaces, Storages.
	Detail *bool `form:"detail,omitempty" json:"detail,omitempty"`
}

// GetV1ProjectsProjectNameComputeHostsParams defines parameters for GetV1ProjectsProjectNameComputeHosts.
type GetV1ProjectsProjectNameComputeHostsParams struct {
	// Offset Index of the first item to return. This allows skipping of items.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page, min of 1 and max of 100, default of 20.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Filter Optional filter to return only items of interest. See https://google.aip.dev/160 for details. Takes precedence over other filter parameters, if set.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// OrderBy Optional comma separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// SiteID Returns only the hosts that are assigned with the given site ID. If equals to 'null', then it returns all the hosts not associated with any site.
	SiteID *string `form:"siteID,omitempty" json:"siteID,omitempty"`

	// InstanceID Returns only the hosts that are assigned to the given instanceID. If equals to 'null', then it returns all the hosts not associated with any instance.
	InstanceID *string `form:"instanceID,omitempty" json:"instanceID,omitempty"`

	// Uuid Returns the host associated with the given UUID. UUID field cannot be null, if specified needs to be filled.
	Uuid *string `form:"uuid,omitempty" json:"uuid,omitempty"`

	// Metadata Filters the metadata associated with the Host. Values are expected to be in the form 'key=value'.
	Metadata *[]string `form:"metadata,omitempty" json:"metadata,omitempty"`

	// Detail Indicates if the host identified by the filter needs to be returned with all their respective child resources, e.g., USBs, interfaces, and storages.
	Detail *bool `form:"detail,omitempty" json:"detail,omitempty"`
}

// PostV1ProjectsProjectNameComputeHostsJSONBody defines parameters for PostV1ProjectsProjectNameComputeHosts.
type PostV1ProjectsProjectNameComputeHostsJSONBody = Host

// GetV1ProjectsProjectNameComputeHostsSummaryParams defines parameters for GetV1ProjectsProjectNameComputeHostsSummary.
type GetV1ProjectsProjectNameComputeHostsSummaryParams struct {
	// SiteID The site ID the hosts belong to. If not specified, returns the summary of all hosts. If specified, returns the summary of hosts that have the given site ID applied to them.
	SiteID *string `form:"siteID,omitempty" json:"siteID,omitempty"`

	// Filter Optional filter to return only items of interest. See https://google.aip.dev/160 for details. Takes precedence over other filter parameters, if set.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`
}

// PatchV1ProjectsProjectNameComputeHostsHostIDJSONBody defines parameters for PatchV1ProjectsProjectNameComputeHostsHostID.
type PatchV1ProjectsProjectNameComputeHostsHostIDJSONBody = Host

// PutV1ProjectsProjectNameComputeHostsHostIDJSONBody defines parameters for PutV1ProjectsProjectNameComputeHostsHostID.
type PutV1ProjectsProjectNameComputeHostsHostIDJSONBody = Host

// PatchV1ProjectsProjectNameComputeHostsHostIDRegisterJSONBody defines parameters for PatchV1ProjectsProjectNameComputeHostsHostIDRegister.
type PatchV1ProjectsProjectNameComputeHostsHostIDRegisterJSONBody struct {
	// AutoOnboard Set to enforce auto-onboarding of the host, which means that no confirmation will be required when the host connects for the first time, to Edge Orchestrator.
	AutoOnboard *bool `json:"autoOnboard,omitempty"`

	// Name The host name.
	Name         *string      `json:"name,omitempty"`
	SerialNumber *interface{} `json:"serialNumber,omitempty"`

	// Timestamps A structure to hold Update and Create timestamps.
	Timestamps *Timestamps  `json:"timestamps,omitempty"`
	Uuid       *interface{} `json:"uuid,omitempty"`
}

// GetV1ProjectsProjectNameComputeInstancesParams defines parameters for GetV1ProjectsProjectNameComputeInstances.
type GetV1ProjectsProjectNameComputeInstancesParams struct {
	// Offset Index of the first item to return. This allows skipping of items.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page, min of 1 and max of 100, default of 20.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Filter Optional filter to return only items of interest. See https://google.aip.dev/160 for details.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// OrderBy Optional comma-separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// WorkloadMemberID Returns only the instances that are assigned to the given workload member. If equals to 'null', returns all instances not associated with any workload member. If equal to '' (empty string), returns all instances that have a workload member associated.
	WorkloadMemberID *string `form:"workloadMemberID,omitempty" json:"workloadMemberID,omitempty"`

	// HostID Returns the instances associated with the host with the given host ID.
	HostID *string `form:"hostID,omitempty" json:"hostID,omitempty"`

	// SiteID Returns the instances associated with the hosts in the site identified. by the given siteID
	SiteID *string `form:"siteID,omitempty" json:"siteID,omitempty"`
}

// PostV1ProjectsProjectNameComputeInstancesJSONBody defines parameters for PostV1ProjectsProjectNameComputeInstances.
type PostV1ProjectsProjectNameComputeInstancesJSONBody = Instance

// PatchV1ProjectsProjectNameComputeInstancesInstanceIDJSONBody defines parameters for PatchV1ProjectsProjectNameComputeInstancesInstanceID.
type PatchV1ProjectsProjectNameComputeInstancesInstanceIDJSONBody = Instance

// GetV1ProjectsProjectNameComputeOsParams defines parameters for GetV1ProjectsProjectNameComputeOs.
type GetV1ProjectsProjectNameComputeOsParams struct {
	// Offset Index of the first item to return. This allows skipping of items.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page, min of 1 and max of 100, default of 20.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Filter Optional filter to return only items of interest. See https://google.aip.dev/160 for details. Takes precedence over other filter parameters, if set.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// OrderBy Optional comma-separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`
}

// PatchV1ProjectsProjectNameComputeOsOSResourceIDJSONBody defines parameters for PatchV1ProjectsProjectNameComputeOsOSResourceID.
type PatchV1ProjectsProjectNameComputeOsOSResourceIDJSONBody = OperatingSystemResource

// PutV1ProjectsProjectNameComputeOsOSResourceIDJSONBody defines parameters for PutV1ProjectsProjectNameComputeOsOSResourceID.
type PutV1ProjectsProjectNameComputeOsOSResourceIDJSONBody = OperatingSystemResource

// GetV1ProjectsProjectNameComputeSchedulesParams defines parameters for GetV1ProjectsProjectNameComputeSchedules.
type GetV1ProjectsProjectNameComputeSchedulesParams struct {
	// Offset Identifies the paging unique identifier for a single page, starts index at 1.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page, min of 1 and max of 100, default of 20.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// RegionID The region ID target of the schedules. If not specified, returns all schedules (given the other query parameters). If specified, returns the schedules that have the specified region ID applied to them, i.e., target including the inherited ones (parent region if not null). If null, returns all schedules without a region ID as target.
	RegionID *string `form:"regionID,omitempty" json:"regionID,omitempty"`

	// SiteID The site ID target of the schedules. If not specified, returns all schedules (given the other query parameters). If specified, returns the schedules that have the specified site ID applied to them, i.e., target including the inherited ones. If null, returns all schedules without a site ID as target.
	SiteID *string `form:"siteID,omitempty" json:"siteID,omitempty"`

	// HostID The host ID target of the schedules. If not specified, returns all schedules (given the other query parameters). If specified, returns the schedules that have the specified host ID applied to them, i.e., target including the inherited ones (parent site if not null). If null, returns all schedules without a host ID as target.
	HostID *string `form:"hostID,omitempty" json:"hostID,omitempty"`

	// UnixEpoch Filters based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds
	UnixEpoch *string `form:"unix_epoch,omitempty" json:"unix_epoch,omitempty"`
}

// GetV1ProjectsProjectNameComputeWorkloadsParams defines parameters for GetV1ProjectsProjectNameComputeWorkloads.
type GetV1ProjectsProjectNameComputeWorkloadsParams struct {
	// Offset Index of the first item to return. This allows skipping of items.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page, min of 1 and max of 100, default of 20.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Filter Optional filter to return only items of interest. See https://google.aip.dev/160 for details. Takes precedence over other filter parameters, if set.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// OrderBy Optional comma-separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string       `form:"orderBy,omitempty" json:"orderBy,omitempty"`
	Kind    *WorkloadKind `form:"kind,omitempty" json:"kind,omitempty"`
}

// GetV1ProjectsProjectNameComputeWorkloadsWorkloadIDMembersParams defines parameters for GetV1ProjectsProjectNameComputeWorkloadsWorkloadIDMembers.
type GetV1ProjectsProjectNameComputeWorkloadsWorkloadIDMembersParams struct {
	// Offset Index of the first item to return. This allows skipping of items.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page, min of 1 and max of 100, default of 20.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Filter Optional filter to return only items of interest. See https://google.aip.dev/160 for details. Takes precedence over other filter parameters, if set.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// OrderBy Optional comma-separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// WorkloadId The unique workload identifier.
	WorkloadId *string `form:"workload_id,omitempty" json:"workload_id,omitempty"`
}

// GetV1ProjectsProjectNameLocalAccountsParams defines parameters for GetV1ProjectsProjectNameLocalAccounts.
type GetV1ProjectsProjectNameLocalAccountsParams struct {
	// Offset Index of the first item to return. This allows skipping of items.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page, min of 1 and max of 100, default of 20.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Filter Optional filter to return only items of interest. See https://google.aip.dev/160 for details.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// OrderBy Optional comma-separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`
}

// GetV1ProjectsProjectNameLocationsParams defines parameters for GetV1ProjectsProjectNameLocations.
type GetV1ProjectsProjectNameLocationsParams struct {
	// Name The name of the resource to be queried; it can be a region and/or site name, if the query parameters below are stated.
	Name *string `form:"name,omitempty" json:"name,omitempty"`

	// ShowSites Indicates if the filter will be applied on the site resources.
	ShowSites *bool `form:"showSites,omitempty" json:"showSites,omitempty"`

	// ShowRegions Indicates if the filter will be applied on the region resources.
	ShowRegions *bool `form:"showRegions,omitempty" json:"showRegions,omitempty"`
}

// GetV1ProjectsProjectNameProvidersParams defines parameters for GetV1ProjectsProjectNameProviders.
type GetV1ProjectsProjectNameProvidersParams struct {
	// Offset Index of the first item to return. This allows skipping of items.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page, min of 1 and max of 100, default of 20.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Filter Optional filter to return only items of interest. See https://google.aip.dev/160 for details. Takes precedence over other filter parameters, if set.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// OrderBy Optional comma-separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`
}

// GetV1ProjectsProjectNameRegionsParams defines parameters for GetV1ProjectsProjectNameRegions.
type GetV1ProjectsProjectNameRegionsParams struct {
	// Offset Index of the first item to return. This allows skipping of items.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page, min of 1 and max of 100, default of 20.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Filter Optional filter to return only items of interest. See https://google.aip.dev/160 for details.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// OrderBy Optional comma-separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// Parent The parent region ID that the region belongs to. If not specified, returns all regions. If specified, returns the regions that have the specified parent applied to them. If null, returns all the regions without a parent.
	Parent *string `form:"parent,omitempty" json:"parent,omitempty"`

	// ShowTotalSites Indicates if the region identified by the filter needs to be returned with the field totalSites filled.
	ShowTotalSites *bool `form:"showTotalSites,omitempty" json:"showTotalSites,omitempty"`
}

// GetV1ProjectsProjectNameRegionsRegionIDSitesParams defines parameters for GetV1ProjectsProjectNameRegionsRegionIDSites.
type GetV1ProjectsProjectNameRegionsRegionIDSitesParams struct {
	// Offset Index of the first item to return. This allows skipping of items.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page, min of 1 and max of 100, default of 20.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Filter Optional filter to return only items of interest. See https://google.aip.dev/160 for details.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// OrderBy Optional comma-separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// OuID The OUID that the sites belong to. If not specified, returns all sites (given the other query parameters). If specified, returns the sites that have the specified OUID applied to them. If null, returns all sites without an OUID.
	OuID *string `form:"ouID,omitempty" json:"ouID,omitempty"`
}

// GetV1ProjectsProjectNameSchedulesRepeatedParams defines parameters for GetV1ProjectsProjectNameSchedulesRepeated.
type GetV1ProjectsProjectNameSchedulesRepeatedParams struct {
	// Offset Index of the first item to return. This allows skipping of items.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page, min of 1 and max of 100, default of 20.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// RegionID The region ID target of the schedules. If not specified, returns all repeated schedules (given the other query parameters). If specified, returns the schedules that have the specified region ID applied to them, i.e., target. If null, returns all repeated schedules without a region ID as target.
	RegionID *string `form:"regionID,omitempty" json:"regionID,omitempty"`

	// SiteID The site ID target of the schedules. If not specified, returns all repeated schedules (given the other query parameters). If specified, returns the schedules that have the specified site ID applied to them, i.e., target. If null, returns all repeated schedules without a site ID as target.
	SiteID *string `form:"siteID,omitempty" json:"siteID,omitempty"`

	// HostID The host ID target of the repeated schedules. If not specified, returns all repeated schedules (given the other query parameters). If specified, returns the schedules that have the specified host ID applied to them, i.e., target. If null, returns all repeated schedules without a host ID as target.
	HostID *string `form:"hostID,omitempty" json:"hostID,omitempty"`

	// UnixEpoch Filters based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds.
	UnixEpoch *string `form:"unix_epoch,omitempty" json:"unix_epoch,omitempty"`
}

// GetV1ProjectsProjectNameSchedulesSingleParams defines parameters for GetV1ProjectsProjectNameSchedulesSingle.
type GetV1ProjectsProjectNameSchedulesSingleParams struct {
	// Offset Index of the first item to return. This allows skipping of items.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page, min of 1 and max of 100, default of 20.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// RegionID The region ID target of the schedules. If not specified, returns all single schedules (given the other query parameters). If specified, returns the schedules that have the specified region ID applied to them, i.e., target. If null, returns all single schedules without a region ID as target.
	RegionID *string `form:"regionID,omitempty" json:"regionID,omitempty"`

	// SiteID The site ID target of the schedules. If not specified, returns all single schedules (given the other query parameters). If specified, returns the schedules that have the specified site ID applied to them, i.e., target. If null, returns all single schedules without a site ID as target.
	SiteID *string `form:"siteID,omitempty" json:"siteID,omitempty"`

	// HostID The host ID target of the single schedules. If not specified, returns all single schedules (given the other query parameters). If specified, returns the schedules that have the specified host ID applied to them, i.e., target. If null, returns all single schedules without a host ID as target.
	HostID *string `form:"hostID,omitempty" json:"hostID,omitempty"`

	// UnixEpoch Filters based on the timestamp, expected to be UNIX epoch UTC timestamp in seconds
	UnixEpoch *string `form:"unix_epoch,omitempty" json:"unix_epoch,omitempty"`
}

// GetV1ProjectsProjectNameTelemetryLoggroupsParams defines parameters for GetV1ProjectsProjectNameTelemetryLoggroups.
type GetV1ProjectsProjectNameTelemetryLoggroupsParams struct {
	// Offset Index of the first item to return. This allows skipping of items.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page, min of 1 and max of 100, default of 20.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// OrderBy Optional comma-separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`
}

// GetV1ProjectsProjectNameTelemetryLoggroupsTelemetryLogsGroupIdLogprofilesParams defines parameters for GetV1ProjectsProjectNameTelemetryLoggroupsTelemetryLogsGroupIdLogprofiles.
type GetV1ProjectsProjectNameTelemetryLoggroupsTelemetryLogsGroupIdLogprofilesParams struct {
	// Offset Index of the first item to return. This allows skipping of items.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page, min of 1 and max of 100, default of 20.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// SiteId Returns only the telemetry profiles that are assigned with the given site ID.
	SiteId *string `form:"siteId,omitempty" json:"siteId,omitempty"`

	// RegionId Returns only the telemetry profiles that are assigned with the given region ID.
	RegionId *string `form:"regionId,omitempty" json:"regionId,omitempty"`

	// InstanceId Returns only the telemetry profiles that are assigned with the given instance identifier.
	InstanceId *string `form:"instanceId,omitempty" json:"instanceId,omitempty"`

	// ShowInherited Indicates if the listed telemetry profiles will be extended with telemetry profiles rendered from the hierarchy. This flag is used along with one of site ID, region ID or instance ID. If site ID, region ID, or instance ID are not set, this flag is ignored.
	ShowInherited *bool `form:"showInherited,omitempty" json:"showInherited,omitempty"`

	// OrderBy Optional comma-separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`
}

// GetV1ProjectsProjectNameTelemetryMetricgroupsParams defines parameters for GetV1ProjectsProjectNameTelemetryMetricgroups.
type GetV1ProjectsProjectNameTelemetryMetricgroupsParams struct {
	// Offset Index of the first item to return. This allows skipping of items.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page, min of 1 and max of 100, default of 20.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// OrderBy Optional comma-separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`
}

// GetV1ProjectsProjectNameTelemetryMetricgroupsTelemetryMetricsGroupIdMetricprofilesParams defines parameters for GetV1ProjectsProjectNameTelemetryMetricgroupsTelemetryMetricsGroupIdMetricprofiles.
type GetV1ProjectsProjectNameTelemetryMetricgroupsTelemetryMetricsGroupIdMetricprofilesParams struct {
	// Offset Index of the first item to return. This allows skipping of items.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// PageSize Defines the amount of items to be contained in a single page, min of 1 and max of 100, default of 20.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// SiteId Returns only the telemetry profiles that are assigned with the given site ID.
	SiteId *string `form:"siteId,omitempty" json:"siteId,omitempty"`

	// RegionId Returns only the telemetry profiles that are assigned with the given region ID.
	RegionId *string `form:"regionId,omitempty" json:"regionId,omitempty"`

	// InstanceId Returns only the telemetry profiles that are assigned with the given instance identifier.
	InstanceId *string `form:"instanceId,omitempty" json:"instanceId,omitempty"`

	// ShowInherited Indicates if the listed telemetry profiles will be extended with telemetry profiles rendered from the hierarchy. This flag is only used along with one of site ID, region ID or instance ID. If site ID, region ID, or instance ID are not set, this flag is ignored.
	ShowInherited *bool `form:"showInherited,omitempty" json:"showInherited,omitempty"`

	// OrderBy Optional comma-separated list of fields to specify a sorting order. See https://google.aip.dev/132 for details.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`
}

// PostV1ProjectsProjectNameComputeHostsJSONRequestBody defines body for PostV1ProjectsProjectNameComputeHosts for application/json ContentType.
type PostV1ProjectsProjectNameComputeHostsJSONRequestBody = PostV1ProjectsProjectNameComputeHostsJSONBody

// PostV1ProjectsProjectNameComputeHostsRegisterJSONRequestBody defines body for PostV1ProjectsProjectNameComputeHostsRegister for application/json ContentType.
type PostV1ProjectsProjectNameComputeHostsRegisterJSONRequestBody = HostRegisterInfo

// DeleteV1ProjectsProjectNameComputeHostsHostIDJSONRequestBody defines body for DeleteV1ProjectsProjectNameComputeHostsHostID for application/json ContentType.
type DeleteV1ProjectsProjectNameComputeHostsHostIDJSONRequestBody = HostOperationWithNote

// PatchV1ProjectsProjectNameComputeHostsHostIDJSONRequestBody defines body for PatchV1ProjectsProjectNameComputeHostsHostID for application/json ContentType.
type PatchV1ProjectsProjectNameComputeHostsHostIDJSONRequestBody = PatchV1ProjectsProjectNameComputeHostsHostIDJSONBody

// PutV1ProjectsProjectNameComputeHostsHostIDJSONRequestBody defines body for PutV1ProjectsProjectNameComputeHostsHostID for application/json ContentType.
type PutV1ProjectsProjectNameComputeHostsHostIDJSONRequestBody = PutV1ProjectsProjectNameComputeHostsHostIDJSONBody

// PutV1ProjectsProjectNameComputeHostsHostIDInvalidateJSONRequestBody defines body for PutV1ProjectsProjectNameComputeHostsHostIDInvalidate for application/json ContentType.
type PutV1ProjectsProjectNameComputeHostsHostIDInvalidateJSONRequestBody = HostOperationWithNote

// PatchV1ProjectsProjectNameComputeHostsHostIDRegisterJSONRequestBody defines body for PatchV1ProjectsProjectNameComputeHostsHostIDRegister for application/json ContentType.
type PatchV1ProjectsProjectNameComputeHostsHostIDRegisterJSONRequestBody PatchV1ProjectsProjectNameComputeHostsHostIDRegisterJSONBody

// PostV1ProjectsProjectNameComputeInstancesJSONRequestBody defines body for PostV1ProjectsProjectNameComputeInstances for application/json ContentType.
type PostV1ProjectsProjectNameComputeInstancesJSONRequestBody = PostV1ProjectsProjectNameComputeInstancesJSONBody

// PatchV1ProjectsProjectNameComputeInstancesInstanceIDJSONRequestBody defines body for PatchV1ProjectsProjectNameComputeInstancesInstanceID for application/json ContentType.
type PatchV1ProjectsProjectNameComputeInstancesInstanceIDJSONRequestBody = PatchV1ProjectsProjectNameComputeInstancesInstanceIDJSONBody

// PostV1ProjectsProjectNameComputeOsJSONRequestBody defines body for PostV1ProjectsProjectNameComputeOs for application/json ContentType.
type PostV1ProjectsProjectNameComputeOsJSONRequestBody = OperatingSystemResource

// PatchV1ProjectsProjectNameComputeOsOSResourceIDJSONRequestBody defines body for PatchV1ProjectsProjectNameComputeOsOSResourceID for application/json ContentType.
type PatchV1ProjectsProjectNameComputeOsOSResourceIDJSONRequestBody = PatchV1ProjectsProjectNameComputeOsOSResourceIDJSONBody

// PutV1ProjectsProjectNameComputeOsOSResourceIDJSONRequestBody defines body for PutV1ProjectsProjectNameComputeOsOSResourceID for application/json ContentType.
type PutV1ProjectsProjectNameComputeOsOSResourceIDJSONRequestBody = PutV1ProjectsProjectNameComputeOsOSResourceIDJSONBody

// PostV1ProjectsProjectNameComputeWorkloadsJSONRequestBody defines body for PostV1ProjectsProjectNameComputeWorkloads for application/json ContentType.
type PostV1ProjectsProjectNameComputeWorkloadsJSONRequestBody = Workload

// PatchV1ProjectsProjectNameComputeWorkloadsWorkloadIDJSONRequestBody defines body for PatchV1ProjectsProjectNameComputeWorkloadsWorkloadID for application/json ContentType.
type PatchV1ProjectsProjectNameComputeWorkloadsWorkloadIDJSONRequestBody = Workload

// PutV1ProjectsProjectNameComputeWorkloadsWorkloadIDJSONRequestBody defines body for PutV1ProjectsProjectNameComputeWorkloadsWorkloadID for application/json ContentType.
type PutV1ProjectsProjectNameComputeWorkloadsWorkloadIDJSONRequestBody = Workload

// PostV1ProjectsProjectNameComputeWorkloadsWorkloadIDMembersJSONRequestBody defines body for PostV1ProjectsProjectNameComputeWorkloadsWorkloadIDMembers for application/json ContentType.
type PostV1ProjectsProjectNameComputeWorkloadsWorkloadIDMembersJSONRequestBody = WorkloadMember

// PostV1ProjectsProjectNameLocalAccountsJSONRequestBody defines body for PostV1ProjectsProjectNameLocalAccounts for application/json ContentType.
type PostV1ProjectsProjectNameLocalAccountsJSONRequestBody = LocalAccount

// PostV1ProjectsProjectNameProvidersJSONRequestBody defines body for PostV1ProjectsProjectNameProviders for application/json ContentType.
type PostV1ProjectsProjectNameProvidersJSONRequestBody = Provider

// PostV1ProjectsProjectNameRegionsJSONRequestBody defines body for PostV1ProjectsProjectNameRegions for application/json ContentType.
type PostV1ProjectsProjectNameRegionsJSONRequestBody = Region

// PatchV1ProjectsProjectNameRegionsRegionIDJSONRequestBody defines body for PatchV1ProjectsProjectNameRegionsRegionID for application/json ContentType.
type PatchV1ProjectsProjectNameRegionsRegionIDJSONRequestBody = Region

// PutV1ProjectsProjectNameRegionsRegionIDJSONRequestBody defines body for PutV1ProjectsProjectNameRegionsRegionID for application/json ContentType.
type PutV1ProjectsProjectNameRegionsRegionIDJSONRequestBody = Region

// PostV1ProjectsProjectNameRegionsRegionIDSitesJSONRequestBody defines body for PostV1ProjectsProjectNameRegionsRegionIDSites for application/json ContentType.
type PostV1ProjectsProjectNameRegionsRegionIDSitesJSONRequestBody = Site

// PatchV1ProjectsProjectNameRegionsRegionIDSitesSiteIDJSONRequestBody defines body for PatchV1ProjectsProjectNameRegionsRegionIDSitesSiteID for application/json ContentType.
type PatchV1ProjectsProjectNameRegionsRegionIDSitesSiteIDJSONRequestBody = Site

// PutV1ProjectsProjectNameRegionsRegionIDSitesSiteIDJSONRequestBody defines body for PutV1ProjectsProjectNameRegionsRegionIDSitesSiteID for application/json ContentType.
type PutV1ProjectsProjectNameRegionsRegionIDSitesSiteIDJSONRequestBody = Site

// PostV1ProjectsProjectNameSchedulesRepeatedJSONRequestBody defines body for PostV1ProjectsProjectNameSchedulesRepeated for application/json ContentType.
type PostV1ProjectsProjectNameSchedulesRepeatedJSONRequestBody = RepeatedSchedule

// PatchV1ProjectsProjectNameSchedulesRepeatedRepeatedScheduleIDJSONRequestBody defines body for PatchV1ProjectsProjectNameSchedulesRepeatedRepeatedScheduleID for application/json ContentType.
type PatchV1ProjectsProjectNameSchedulesRepeatedRepeatedScheduleIDJSONRequestBody = RepeatedSchedule

// PutV1ProjectsProjectNameSchedulesRepeatedRepeatedScheduleIDJSONRequestBody defines body for PutV1ProjectsProjectNameSchedulesRepeatedRepeatedScheduleID for application/json ContentType.
type PutV1ProjectsProjectNameSchedulesRepeatedRepeatedScheduleIDJSONRequestBody = RepeatedSchedule

// PostV1ProjectsProjectNameSchedulesSingleJSONRequestBody defines body for PostV1ProjectsProjectNameSchedulesSingle for application/json ContentType.
type PostV1ProjectsProjectNameSchedulesSingleJSONRequestBody = SingleSchedule

// PatchV1ProjectsProjectNameSchedulesSingleSingleScheduleIDJSONRequestBody defines body for PatchV1ProjectsProjectNameSchedulesSingleSingleScheduleID for application/json ContentType.
type PatchV1ProjectsProjectNameSchedulesSingleSingleScheduleIDJSONRequestBody = SingleSchedule

// PutV1ProjectsProjectNameSchedulesSingleSingleScheduleIDJSONRequestBody defines body for PutV1ProjectsProjectNameSchedulesSingleSingleScheduleID for application/json ContentType.
type PutV1ProjectsProjectNameSchedulesSingleSingleScheduleIDJSONRequestBody = SingleSchedule

// PostV1ProjectsProjectNameTelemetryLoggroupsJSONRequestBody defines body for PostV1ProjectsProjectNameTelemetryLoggroups for application/json ContentType.
type PostV1ProjectsProjectNameTelemetryLoggroupsJSONRequestBody = TelemetryLogsGroup

// PostV1ProjectsProjectNameTelemetryLoggroupsTelemetryLogsGroupIdLogprofilesJSONRequestBody defines body for PostV1ProjectsProjectNameTelemetryLoggroupsTelemetryLogsGroupIdLogprofiles for application/json ContentType.
type PostV1ProjectsProjectNameTelemetryLoggroupsTelemetryLogsGroupIdLogprofilesJSONRequestBody = TelemetryLogsProfile

// PatchV1ProjectsProjectNameTelemetryLoggroupsTelemetryLogsGroupIdLogprofilesTelemetryLogsProfileIdJSONRequestBody defines body for PatchV1ProjectsProjectNameTelemetryLoggroupsTelemetryLogsGroupIdLogprofilesTelemetryLogsProfileId for application/json ContentType.
type PatchV1ProjectsProjectNameTelemetryLoggroupsTelemetryLogsGroupIdLogprofilesTelemetryLogsProfileIdJSONRequestBody = TelemetryLogsProfile

// PutV1ProjectsProjectNameTelemetryLoggroupsTelemetryLogsGroupIdLogprofilesTelemetryLogsProfileIdJSONRequestBody defines body for PutV1ProjectsProjectNameTelemetryLoggroupsTelemetryLogsGroupIdLogprofilesTelemetryLogsProfileId for application/json ContentType.
type PutV1ProjectsProjectNameTelemetryLoggroupsTelemetryLogsGroupIdLogprofilesTelemetryLogsProfileIdJSONRequestBody = TelemetryLogsProfile

// PostV1ProjectsProjectNameTelemetryMetricgroupsJSONRequestBody defines body for PostV1ProjectsProjectNameTelemetryMetricgroups for application/json ContentType.
type PostV1ProjectsProjectNameTelemetryMetricgroupsJSONRequestBody = TelemetryMetricsGroup

// PostV1ProjectsProjectNameTelemetryMetricgroupsTelemetryMetricsGroupIdMetricprofilesJSONRequestBody defines body for PostV1ProjectsProjectNameTelemetryMetricgroupsTelemetryMetricsGroupIdMetricprofiles for application/json ContentType.
type PostV1ProjectsProjectNameTelemetryMetricgroupsTelemetryMetricsGroupIdMetricprofilesJSONRequestBody = TelemetryMetricsProfile

// PatchV1ProjectsProjectNameTelemetryMetricgroupsTelemetryMetricsGroupIdMetricprofilesTelemetryMetricsProfileIdJSONRequestBody defines body for PatchV1ProjectsProjectNameTelemetryMetricgroupsTelemetryMetricsGroupIdMetricprofilesTelemetryMetricsProfileId for application/json ContentType.
type PatchV1ProjectsProjectNameTelemetryMetricgroupsTelemetryMetricsGroupIdMetricprofilesTelemetryMetricsProfileIdJSONRequestBody = TelemetryMetricsProfile

// PutV1ProjectsProjectNameTelemetryMetricgroupsTelemetryMetricsGroupIdMetricprofilesTelemetryMetricsProfileIdJSONRequestBody defines body for PutV1ProjectsProjectNameTelemetryMetricgroupsTelemetryMetricsGroupIdMetricprofilesTelemetryMetricsProfileId for application/json ContentType.
type PutV1ProjectsProjectNameTelemetryMetricgroupsTelemetryMetricsGroupIdMetricprofilesTelemetryMetricsProfileIdJSONRequestBody = TelemetryMetricsProfile
