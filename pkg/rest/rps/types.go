// Package rps provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package rps

import (
	"time"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// APIResponse defines model for APIResponse.
type APIResponse struct {
	Error   *string `json:"error,omitempty"`
	Message *string `json:"message,omitempty"`
}

// CountDomainResponse defines model for CountDomainResponse.
type CountDomainResponse struct {
	Data       *[]DomainResponse `json:"data,omitempty"`
	TotalCount *int              `json:"totalCount,omitempty"`
}

// DomainPATCH defines model for DomainPATCH.
type DomainPATCH struct {
	DomainSuffix                  string `json:"domainSuffix"`
	ProfileName                   string `json:"profileName"`
	ProvisioningCert              []byte `json:"provisioningCert"`
	ProvisioningCertPassword      string `json:"provisioningCertPassword"`
	ProvisioningCertStorageFormat string `json:"provisioningCertStorageFormat"`
	Version                       string `json:"version"`
}

// DomainPOST defines model for DomainPOST.
type DomainPOST struct {
	DomainSuffix                  string `json:"domainSuffix"`
	ProfileName                   string `json:"profileName"`
	ProvisioningCert              []byte `json:"provisioningCert"`
	ProvisioningCertPassword      string `json:"provisioningCertPassword"`
	ProvisioningCertStorageFormat string `json:"provisioningCertStorageFormat"`
}

// DomainResponse defines model for DomainResponse.
type DomainResponse struct {
	DomainSuffix                  string    `json:"domainSuffix"`
	ExpirationDate                time.Time `json:"expirationDate"`
	ProfileName                   string    `json:"profileName"`
	ProvisioningCertStorageFormat string    `json:"provisioningCertStorageFormat"`
	TenantId                      string    `json:"tenantId"`
	Version                       string    `json:"version"`
}

// GetAllDomainsParams defines parameters for GetAllDomains.
type GetAllDomainsParams struct {
	// Skip The number of items to skip before starting to collect the result set
	Skip *int `form:"$skip,omitempty" json:"$skip,omitempty"`

	// Top The numbers of items to return
	Top *int `form:"$top,omitempty" json:"$top,omitempty"`

	// Count The total number of domains
	Count *bool `form:"$count,omitempty" json:"$count,omitempty"`
}

// UpdateDomainSuffixJSONRequestBody defines body for UpdateDomainSuffix for application/json ContentType.
type UpdateDomainSuffixJSONRequestBody = DomainPATCH

// CreateDomainJSONRequestBody defines body for CreateDomain for application/json ContentType.
type CreateDomainJSONRequestBody = DomainPOST
