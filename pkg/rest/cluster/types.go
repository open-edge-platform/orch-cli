// Package cluster provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package cluster

const (
	BearerAuthScopes = "BearerAuth.Scopes"
	HTTPScopes       = "HTTP.Scopes"
)

// Defines values for NodeSpecRole.
const (
	All          NodeSpecRole = "all"
	Controlplane NodeSpecRole = "controlplane"
	Worker       NodeSpecRole = "worker"
)

// Defines values for StatusIndicator.
const (
	STATUSINDICATIONERROR       StatusIndicator = "STATUS_INDICATION_ERROR"
	STATUSINDICATIONIDLE        StatusIndicator = "STATUS_INDICATION_IDLE"
	STATUSINDICATIONINPROGRESS  StatusIndicator = "STATUS_INDICATION_IN_PROGRESS"
	STATUSINDICATIONUNSPECIFIED StatusIndicator = "STATUS_INDICATION_UNSPECIFIED"
)

// Defines values for StatusInfoCondition.
const (
	STATUSCONDITIONNOTREADY     StatusInfoCondition = "STATUS_CONDITION_NOTREADY"
	STATUSCONDITIONPROVISIONING StatusInfoCondition = "STATUS_CONDITION_PROVISIONING"
	STATUSCONDITIONREADY        StatusInfoCondition = "STATUS_CONDITION_READY"
	STATUSCONDITIONREMOVING     StatusInfoCondition = "STATUS_CONDITION_REMOVING"
	STATUSCONDITIONUNKNOWN      StatusInfoCondition = "STATUS_CONDITION_UNKNOWN"
)

// Defines values for TemplateInfoControlplaneprovidertype.
const (
	Kubeadm TemplateInfoControlplaneprovidertype = "kubeadm"
	Rke2    TemplateInfoControlplaneprovidertype = "rke2"
)

// Defines values for TemplateInfoInfraprovidertype.
const (
	Docker TemplateInfoInfraprovidertype = "docker"
	Intel  TemplateInfoInfraprovidertype = "intel"
)

// ClusterDetailInfo defines model for ClusterDetailInfo.
type ClusterDetailInfo struct {
	// ControlPlaneReady A generic status object.
	ControlPlaneReady *GenericStatus `json:"controlPlaneReady,omitempty"`

	// InfrastructureReady A generic status object.
	InfrastructureReady *GenericStatus          `json:"infrastructureReady,omitempty"`
	KubernetesVersion   *string                 `json:"kubernetesVersion,omitempty"`
	Labels              *map[string]interface{} `json:"labels,omitempty"`

	// LifecyclePhase A generic status object.
	LifecyclePhase *GenericStatus `json:"lifecyclePhase,omitempty"`
	Name           *string        `json:"name,omitempty"`

	// NodeHealth A generic status object.
	NodeHealth *GenericStatus `json:"nodeHealth,omitempty"`
	Nodes      *[]NodeInfo    `json:"nodes,omitempty"`

	// ProviderStatus A generic status object.
	ProviderStatus *GenericStatus `json:"providerStatus,omitempty"`
	Template       *string        `json:"template,omitempty"`
}

// ClusterInfo defines model for ClusterInfo.
type ClusterInfo struct {
	// ControlPlaneReady A generic status object.
	ControlPlaneReady *GenericStatus `json:"controlPlaneReady,omitempty"`

	// InfrastructureReady A generic status object.
	InfrastructureReady *GenericStatus          `json:"infrastructureReady,omitempty"`
	KubernetesVersion   *string                 `json:"kubernetesVersion,omitempty"`
	Labels              *map[string]interface{} `json:"labels,omitempty"`

	// LifecyclePhase A generic status object.
	LifecyclePhase *GenericStatus `json:"lifecyclePhase,omitempty"`
	Name           *string        `json:"name,omitempty"`

	// NodeHealth A generic status object.
	NodeHealth   *GenericStatus `json:"nodeHealth,omitempty"`
	NodeQuantity *int           `json:"nodeQuantity,omitempty"`

	// ProviderStatus A generic status object.
	ProviderStatus *GenericStatus `json:"providerStatus,omitempty"`
}

// ClusterLabels defines model for ClusterLabels.
type ClusterLabels struct {
	// Labels Labels are key/value pairs that need to conform to https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set
	Labels *map[string]string `json:"labels,omitempty"`
}

// ClusterSpec defines model for ClusterSpec.
type ClusterSpec struct {
	// Labels Labels are key/value pairs that need to conform to https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set
	Labels   *map[string]string `json:"labels,omitempty"`
	Name     *string            `json:"name,omitempty"`
	Nodes    []NodeSpec         `json:"nodes"`
	Template *string            `json:"template,omitempty"`
}

// ClusterSummary defines model for ClusterSummary.
type ClusterSummary struct {
	// Error The number of clusters that are in error state.
	Error int32 `json:"error"`

	// InProgress The number of clusters that are in progess state (provisioning/deleting).
	InProgress int32 `json:"inProgress"`

	// Ready The number of clusters that are ready.
	Ready int32 `json:"ready"`

	// TotalClusters The total number of clusters.
	TotalClusters int32 `json:"totalClusters"`

	// Unknown The number of clusters that are in unknown state.
	Unknown int32 `json:"unknown"`
}

// ClusterTemplateInfo defines model for ClusterTemplateInfo.
type ClusterTemplateInfo struct {
	// Name Name of the template
	Name string `json:"name"`

	// Version Cluster template version in the format of 'vX.Y.Z'
	Version string `json:"version"`
}

// DefaultTemplateInfo defines model for DefaultTemplateInfo.
type DefaultTemplateInfo struct {
	// Name Name of the template. Not required when setting the default, is available in GET /v1/templates.
	Name *string `json:"name,omitempty"`

	// Version Template version. If set to empty, the latest version will be used as default.
	Version string `json:"version"`
}

// GenericStatus A generic status object.
type GenericStatus struct {
	// Indicator The status indicator.
	Indicator *StatusIndicator `json:"indicator,omitempty"`

	// Message A human-readable status message.
	Message *string `json:"message,omitempty"`

	// Timestamp A Unix, UTC timestamp when the status was last updated.
	Timestamp *uint64 `json:"timestamp,omitempty"`
}

// KubeconfigInfo defines model for KubeconfigInfo.
type KubeconfigInfo struct {
	Id         *string `json:"id,omitempty"`
	Kubeconfig *string `json:"kubeconfig,omitempty"`
}

// NetworkRanges defines model for NetworkRanges.
type NetworkRanges struct {
	// CidrBlocks A list of CIDR blocks in valid CIDR notation.
	CidrBlocks []string `json:"cidrBlocks"`
}

// NodeInfo defines model for NodeInfo.
type NodeInfo struct {
	// Id Host resource id
	Id     *string     `json:"id,omitempty"`
	Role   *string     `json:"role,omitempty"`
	Status *StatusInfo `json:"status,omitempty"`
}

// NodeSpec defines model for NodeSpec.
type NodeSpec struct {
	// Id UUID of the host.
	Id   string       `json:"id"`
	Role NodeSpecRole `json:"role"`
}

// NodeSpecRole defines model for NodeSpec.Role.
type NodeSpecRole string

// ProblemDetails defines model for ProblemDetails.
type ProblemDetails struct {
	// Message error message
	Message *string `json:"message,omitempty"`
}

// StatusIndicator The status indicator.
type StatusIndicator string

// StatusInfo defines model for StatusInfo.
type StatusInfo struct {
	Condition *StatusInfoCondition `json:"condition,omitempty"`
	Reason    *string              `json:"reason,omitempty"`
	Timestamp *string              `json:"timestamp,omitempty"`
}

// StatusInfoCondition defines model for StatusInfo.Condition.
type StatusInfoCondition string

// TemplateInfo defines model for TemplateInfo.
type TemplateInfo struct {
	// ClusterLabels Allows users to specify a list of key/value pairs to be attached to a cluster created with the template. These pairs need to conform to https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set
	ClusterLabels *map[string]string `json:"cluster-labels,omitempty"`

	// ClusterNetwork Cluster network configuration, including pod and service CIDR blocks.
	ClusterNetwork           *ClusterNetwork                       `json:"clusterNetwork,omitempty"`
	Clusterconfiguration     *map[string]interface{}               `json:"clusterconfiguration,omitempty"`
	Controlplaneprovidertype *TemplateInfoControlplaneprovidertype `json:"controlplaneprovidertype,omitempty"`
	Description              *string                               `json:"description,omitempty"`
	Infraprovidertype        *TemplateInfoInfraprovidertype        `json:"infraprovidertype,omitempty"`
	KubernetesVersion        string                                `json:"kubernetesVersion"`
	Name                     string                                `json:"name"`
	Version                  string                                `json:"version"`
}

// TemplateInfoControlplaneprovidertype defines model for TemplateInfo.Controlplaneprovidertype.
type TemplateInfoControlplaneprovidertype string

// TemplateInfoInfraprovidertype defines model for TemplateInfo.Infraprovidertype.
type TemplateInfoInfraprovidertype string

// TemplateInfoList defines model for TemplateInfoList.
type TemplateInfoList struct {
	DefaultTemplateInfo *DefaultTemplateInfo `json:"defaultTemplateInfo,omitempty"`
	TemplateInfoList    *[]TemplateInfo      `json:"templateInfoList,omitempty"`

	// TotalElements The count of items in the entire list, regardless of pagination.
	TotalElements *int32 `json:"totalElements,omitempty"`
}

// VersionList defines model for VersionList.
type VersionList struct {
	VersionList *[]string `json:"versionList,omitempty"`
}

// ClusterNetwork Cluster network configuration, including pod and service CIDR blocks.
type ClusterNetwork struct {
	Pods     *NetworkRanges `json:"pods,omitempty"`
	Services *NetworkRanges `json:"services,omitempty"`
}

// N400BadRequest defines model for 400-BadRequest.
type N400BadRequest = ProblemDetails

// N401Unauthorized defines model for 401-Unauthorized.
type N401Unauthorized = ProblemDetails

// N404NotFound defines model for 404-NotFound.
type N404NotFound = ProblemDetails

// N409Conflict defines model for 409-Conflict.
type N409Conflict = ProblemDetails

// N500InternalServerError defines model for 500-InternalServerError.
type N500InternalServerError = ProblemDetails

// N501NotImplemented defines model for 501-NotImplemented.
type N501NotImplemented = ProblemDetails

// GetV2ProjectsProjectNameClustersParams defines parameters for GetV2ProjectsProjectNameClusters.
type GetV2ProjectsProjectNameClustersParams struct {
	// PageSize The maximum number of items to return.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. It is almost always used in conjunction with the 'pageSize' query.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// OrderBy The ordering of the entries. "asc" and "desc" are valid values. If none is specified, "asc" is used.
	//
	// Supported fields:
	// - name
	// - kubernetesVersion
	// - providerStatus
	// - lifecyclePhase
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// Filter Filters the entries based on the filter provided.
	//
	// Supported fields:
	// - name
	// - kubernetesVersion
	// - providerStatus
	// - lifecyclePhase
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`
}

// PutV2ProjectsProjectNameClustersNameNodesJSONBody defines parameters for PutV2ProjectsProjectNameClustersNameNodes.
type PutV2ProjectsProjectNameClustersNameNodesJSONBody = []NodeSpec

// DeleteV2ProjectsProjectNameClustersNameNodesNodeIdParams defines parameters for DeleteV2ProjectsProjectNameClustersNameNodesNodeId.
type DeleteV2ProjectsProjectNameClustersNameNodesNodeIdParams struct {
	// Force When set to true, force deletes the edge node.
	Force *bool `form:"force,omitempty" json:"force,omitempty"`
}

// GetV2ProjectsProjectNameTemplatesParams defines parameters for GetV2ProjectsProjectNameTemplates.
type GetV2ProjectsProjectNameTemplatesParams struct {
	// Default When set to true, gets only the default template information
	Default *bool `form:"default,omitempty" json:"default,omitempty"`

	// PageSize The maximum number of items to return.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Offset Index of the first item to return. It is almost always used in conjunction with the 'pageSize' query.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// OrderBy The ordering of the entries. "asc" and "desc" are valid values. If none is specified, "asc" is used.
	OrderBy *string `form:"orderBy,omitempty" json:"orderBy,omitempty"`

	// Filter Filters the entries based on the filter provided.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`
}

// PostV2ProjectsProjectNameClustersJSONRequestBody defines body for PostV2ProjectsProjectNameClusters for application/json ContentType.
type PostV2ProjectsProjectNameClustersJSONRequestBody = ClusterSpec

// PutV2ProjectsProjectNameClustersNameLabelsJSONRequestBody defines body for PutV2ProjectsProjectNameClustersNameLabels for application/json ContentType.
type PutV2ProjectsProjectNameClustersNameLabelsJSONRequestBody = ClusterLabels

// PutV2ProjectsProjectNameClustersNameNodesJSONRequestBody defines body for PutV2ProjectsProjectNameClustersNameNodes for application/json ContentType.
type PutV2ProjectsProjectNameClustersNameNodesJSONRequestBody = PutV2ProjectsProjectNameClustersNameNodesJSONBody

// PutV2ProjectsProjectNameClustersNameTemplateJSONRequestBody defines body for PutV2ProjectsProjectNameClustersNameTemplate for application/json ContentType.
type PutV2ProjectsProjectNameClustersNameTemplateJSONRequestBody = ClusterTemplateInfo

// PostV2ProjectsProjectNameTemplatesJSONRequestBody defines body for PostV2ProjectsProjectNameTemplates for application/json ContentType.
type PostV2ProjectsProjectNameTemplatesJSONRequestBody = TemplateInfo

// PutV2ProjectsProjectNameTemplatesNameDefaultJSONRequestBody defines body for PutV2ProjectsProjectNameTemplatesNameDefault for application/json ContentType.
type PutV2ProjectsProjectNameTemplatesNameDefaultJSONRequestBody = DefaultTemplateInfo
